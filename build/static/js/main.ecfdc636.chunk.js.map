{"version":3,"sources":["_helpers/history.js","_constants/alert.constants.js","_constants/user.constants.js","_constants/employee.constants.js","_constants/meetup.constants.js","_reducers/authentication.reducer.js","_reducers/index.js","_reducers/users.reducer.js","_reducers/alert.reducer.js","_reducers/employee.reducer.js","_reducers/meetup.reducer.js","_helpers/store.js","_helpers/auth-header.js","_actions/alert.actions.js","config.js","_services/user.service.js","_services/employee.service.js","_services/meetup.service.js","_actions/user.actions.js","_actions/employee.actions.js","_actions/meetup.actions.js","_components/PrivateRoute.jsx","LoginPage/LoginPage.jsx","LoginPage/RegisterPage.jsx","Views/UserOverLay.jsx","App/Nav.jsx","Employees/EmployeeDetails.jsx","Employees/AddEmployee.jsx","Employees/UpdateEmployee.jsx","Meetups/Meetups.jsx","Meetups/MeetupDetails.jsx","App/App.jsx","index.jsx"],"names":["history","createBrowserHistory","alertConstants","userConstants","USERS_LOGIN_REQUEST","USERS_LOGIN_SUCCESS","USERS_LOGIN_FAILURE","LOGOUT","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","GET_REGISTER_REQUEST","GET_REGISTER_SUCCESS","GET_REGISTER_FAILURE","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAILURE","employeeConstants","meetupConstants","user","JSON","parse","localStorage","getItem","initialState","loggedIn","rootReducer","combineReducers","authentication","state","action","type","LOGIN_REQUEST","loggingIn","LOGIN_SUCCESS","LOGIN_FAILURE","users","loading","items","error","userDetails","loginDetails","register","alert","message","employees","employeeDetails","employee","employeeUpdate","employeeCreate","meetups","meetupDetails","meetup","joinMeetup","leaveMeetup","store","createStore","applyMiddleware","thunkMiddleware","authHeader","token","alertActions","success","clear","baseUrl","userService","login","email","password","requestOptions","method","headers","body","stringify","fetch","then","handleResponse","setItem","logout","payload","console","log","getUserDetails","removeItem","response","text","data","ok","status","statusText","Promise","reject","employeeservice","getAllEmployees","getEmployeeDetails","id","updateEmployee","deleteEmployee","createEmployee","meetupService","getAllMeetups","getMeetupDetails","userActions","username","dispatch","push","failure","request","getAll","employeeactions","meetupactions","meetupId","PrivateRoute","Component","component","rest","render","props","to","pathname","from","location","LoginPage","submitted","handleChange","bind","handleSubmit","e","this","setState","target","name","value","preventDefault","className","Container","Row","Col","md","lg","xl","Card","CardBody","onSubmit","htmlFor","onChange","xs","sm","class","disabled","role","aria-hidden","Button","React","connectedLoginPage","connect","RegisterPage","onCancel","passwordConfirmation","handleClick","handleEmailValidation","verifyEmail","length","test","Form","required","block","onClick","UserData","useState","show","setShow","setTarget","ref","useRef","event","Overlay","placement","container","current","Popover","Title","as","Content","Navigation","userData","Navbar","bg","variant","Nav","Link","href","EmployeeDetails","addEmployee","editEmployee","window","confirm","confirmDelete","_id","CardHeader","Table","hover","bordered","striped","responsive","size","map","item","key","age","salary","connectedEmployee","AddEmployee","handleNumberChange","CardFooter","UpdateEmployee","match","params","nextProps","MeetupDetails","itemLink","title","description","createdAt","timeFrom","timeTo","joinedPeopleCount","Meetups","index","_isUserJoinedInMeetup","_isUserOwner","handleJoinMeetup","handleLeaveMeetup","showConfirmation","meetupData","meetupCreator","src","image","alt","width","height","shortInfo","MeetupCategory","category","MeetupUsers","joinedPeople","joinedMeetup","joinedMeetups","indexOf","creator","App","listen","exact","path","connectedApp","document","getElementById"],"mappings":"8MAEaA,EAAUC,c,gBCFVC,EACA,gBADAA,EAEF,cAFEA,EAGF,cCHEC,EAAgB,CACzBC,oBAAqB,sBACrBC,oBAAqB,sBACrBC,oBAAqB,sBAErBC,OAAQ,eAERC,eAAgB,uBAChBC,eAAgB,uBAChBC,eAAgB,uBAGhBC,qBAAsB,uBACtBC,qBAAsB,uBACtBC,qBAAsB,uBAEtBC,iBAAkB,mBAClBC,iBAAkB,mBAClBC,iBAAkB,oBClBTC,EACI,cADJA,EAEI,cAFJA,EAGI,cAHJA,EASW,0BATXA,EAUW,0BAVXA,EAWW,0BAXXA,EAaY,sBAbZA,EAcY,sBAdZA,EAeY,sBAfZA,EAiBW,qBAjBXA,EAkBW,qBAlBXA,EAmBW,qBAnBXA,EAqBW,qBArBXA,EAsBW,qBAtBXA,EAuBW,qBCvBXC,EACI,cADJA,EAEI,cAFJA,EAGI,cAHJA,EAKW,qBALXA,EAMW,qBANXA,EAOW,qBAPXA,EASY,sBATZA,EAUY,sBAVZA,EAWY,sBAXZA,EAca,uBAdbA,EAea,uBAfbA,EAgBa,uBCdtBC,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,SACrCC,EAAeL,EAAO,CACxBM,UAAU,EACVN,QACA,GCEJ,IAiBeO,EAjBKC,YAAgB,CAChCC,eDDG,WAAuD,IAA/BC,EAA8B,uDAAtBL,EAAcM,EAAQ,uCACzD,OAAQA,EAAOC,MACX,KAAK5B,EAAc6B,cACf,MAAO,CAACC,WAAW,EAAMd,KAAMW,EAAOX,MAC1C,KAAKhB,EAAc+B,cACf,MAAO,CAACT,UAAU,EAAMN,KAAMW,EAAOX,MACzC,KAAKhB,EAAcgC,cAEnB,KAAKhC,EAAcI,OACf,MAAO,GACX,QACI,OAAOsB,ICTfO,MCRG,WAAoC,IAArBP,EAAoB,uDAAZ,GAAIC,EAAQ,uCACtC,OAAQA,EAAOC,MACX,KAAK5B,EAAcK,eACf,MAAO,CAAC6B,SAAS,GACrB,KAAKlC,EAAcM,eACf,MAAO,CAAC6B,MAAOR,EAAOM,OAC1B,KAAKjC,EAAcO,eACf,MAAO,CAAC6B,MAAOT,EAAOS,OAC1B,QACI,OAAOV,IDAfW,YCmBG,WAA0C,IAArBX,EAAoB,uDAAZ,GAAIC,EAAQ,uCAC5C,OAAQA,EAAOC,MACX,KAAK5B,EAAcW,iBACf,MAAO,CAACuB,SAAS,GACrB,KAAKlC,EAAcY,iBACf,MAAO,CAACuB,MAAOR,EAAOX,MAC1B,KAAKhB,EAAca,iBACf,MAAO,CAACuB,MAAOT,EAAOS,OAC1B,QACI,OAAOV,ID3BfY,aC+BG,WAA2C,IAArBZ,EAAoB,uDAAZ,GAAIC,EAAQ,uCAC7C,OAAQA,EAAOC,MACX,KAAK5B,EAAcC,oBACf,MAAO,CAACiC,SAAS,GACrB,KAAKlC,EAAcE,oBACf,MAAO,CAACiC,MAAOR,EAAOX,MAC1B,KAAKhB,EAAcG,oBACf,MAAO,CAACiC,MAAOT,EAAOS,OAC1B,QACI,OAAOV,IDvCfa,SCGG,WAAuC,IAArBb,EAAoB,uDAAZ,GAAIC,EAAQ,uCACzC,OAAQA,EAAOC,MACX,KAAK5B,EAAcQ,qBACf,MAAO,CAAC0B,SAAS,GACrB,KAAKlC,EAAcS,qBACf,MAAO,CAAC0B,MAAOR,EAAOM,OAC1B,KAAKjC,EAAcU,qBACf,MAAO,CAAC0B,MAAOT,EAAOS,OAC1B,QACI,OAAOV,IDXfc,MEZG,WAAoC,IAArBd,EAAoB,uDAAZ,GAAIC,EAAQ,uCACtC,OAAQA,EAAOC,MACX,KAAK7B,EACD,MAAO,CAAC6B,KAAM,gBAAiBa,QAASd,EAAOc,SACnD,KAAK1C,EACD,MAAO,CAAC6B,KAAM,eAAgBa,QAASd,EAAOc,SAClD,KAAK1C,EACD,MAAO,GACX,QACI,OAAO2B,IFIfgB,UGbG,WAAwC,IAArBhB,EAAoB,uDAAZ,GAAIC,EAAQ,uCAC1C,OAAQA,EAAOC,MACX,KAAKd,EACD,MAAO,CAACoB,SAAS,GACrB,KAAKpB,EACD,MAAO,CAACqB,MAAOR,EAAOe,WAC1B,KAAK5B,EACD,MAAO,CAACsB,MAAOT,EAAOS,OAE1B,KAAKtB,EACD,MAAO,CAACoB,SAAS,GACrB,KAAKpB,EACD,MAAO,CAACsB,MAAOT,EAAOS,OAC1B,QACI,OAAOV,IHAfiB,gBGIG,WAA8C,IAArBjB,EAAoB,uDAAZ,GAAIC,EAAQ,uCAChD,OAAQA,EAAOC,MACX,KAAKd,EACD,MAAO,CAACoB,SAAS,GACrB,KAAKpB,EACD,MAAO,CAACqB,MAAOR,EAAOiB,UAC1B,KAAK9B,EACD,MAAO,CAACsB,MAAOT,EAAOS,OAC1B,QACI,OAAOV,IHZfmB,eGgBG,WAA6C,IAArBnB,EAAoB,uDAAZ,GAAIC,EAAQ,uCAC/C,OAAQA,EAAOC,MACX,KAAKd,EACD,MAAO,CAACoB,SAAS,GACrB,KAAKpB,EACD,MAAO,CAACqB,MAAOR,EAAOiB,UAC1B,KAAK9B,EACD,MAAO,CAACsB,MAAOT,EAAOS,OAC1B,QACI,OAAOV,IHxBfoB,eG4BG,WAA6C,IAArBpB,EAAoB,uDAAZ,GAAIC,EAAQ,uCAC/C,OAAQA,EAAOC,MACX,KAAKd,EACD,MAAO,CAACoB,SAAS,GACrB,KAAKpB,EACD,MAAO,CAACqB,MAAOR,EAAOiB,UAC1B,KAAK9B,EACD,MAAO,CAACsB,MAAOT,EAAOS,OAC1B,QACI,OAAOV,IHpCfqB,QIjBG,WAAsC,IAArBrB,EAAoB,uDAAZ,GAAIC,EAAQ,uCACxC,OAAQA,EAAOC,MACX,KAAKb,EACD,MAAO,CAACmB,SAAS,GACrB,KAAKnB,EACD,MAAO,CAACoB,MAAOR,EAAOoB,SAC1B,KAAKhC,EACD,MAAO,CAACqB,MAAOT,EAAOS,OAC1B,QACI,OAAOV,IJSfsB,cILG,WAA4C,IAArBtB,EAAoB,uDAAZ,GAAIC,EAAQ,uCAC9C,OAAQA,EAAOC,MACX,KAAKb,EACD,MAAO,CAACmB,SAAS,GACrB,KAAKnB,EACD,MAAO,CAACoB,MAAOR,EAAOsB,QAC1B,KAAKlC,EACD,MAAO,CAACqB,MAAOT,EAAOS,OAC1B,QACI,OAAOV,IJHfwB,WIOG,WAAyC,IAArBxB,EAAoB,uDAAZ,GAAIC,EAAQ,uCAC3C,OAAQA,EAAOC,MACX,KAAKb,EACD,MAAO,CAACmB,SAAS,GACrB,KAAKnB,EACD,MAAO,CAACoB,MAAOR,EAAOsB,QAC1B,KAAKlC,EACD,MAAO,CAACqB,MAAOT,EAAOS,OAC1B,QACI,OAAOV,IJffyB,YIoBG,WAA0C,IAArBzB,EAAoB,uDAAZ,GAAIC,EAAQ,uCAC5C,OAAQA,EAAOC,MACX,KAAKb,EACD,MAAO,CAACmB,SAAS,GACrB,KAAKnB,EACD,MAAO,CAACoB,MAAOR,EAAOsB,QAC1B,KAAKlC,EACD,MAAO,CAACqB,MAAOT,EAAOS,OAC1B,QACI,OAAOV,MC5CN0B,EAAQC,YACjB9B,EACA+B,YACIC,MCVD,SAASC,IAEZ,IAAIxC,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,SAE3C,OAAIJ,GAAQA,EAAKyC,MACN,CAAE,cAAiB,UAAYzC,EAAKyC,OAEpC,G,2CCLFC,EAAe,CACxBC,QAKJ,SAAiBlB,GACb,MAAO,CAACb,KAAM7B,EAAwB0C,YALtCL,MAQJ,SAAeK,GACX,MAAO,CAACb,KAAM7B,EAAsB0C,YARpCmB,MAWJ,WACI,MAAO,CAAChC,KAAM7B,KCjBX,IAAM8D,EAAS,kDCETC,GAAc,CACvBC,MAOJ,SAAeC,EAAOC,GAClB,IAAMC,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMpD,KAAKqD,UACP,CAACN,QAAOC,cAIhB,OAAOM,MAAMV,EAAU,eAAgBK,GAAgBM,KAAKC,IAAgBD,MAAK,SAAAxD,GAG7E,OADAG,aAAauD,QAAQ,OAAQzD,KAAKqD,UAAUtD,IACrCA,MApBX2D,UACApC,SAwBJ,SAAkBqC,GACd,IAAMV,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMpD,KAAKqD,UAAUM,IAEzBC,QAAQC,IAAIF,GAEZ,OAAOL,MAAMV,EAAU,kBAAmBK,GAAgBM,KAAKC,IAAgBD,MAAK,SAAAxD,GAEhF,OADA6D,QAAQC,IAAI9D,GACLA,MAnCX+D,eA4CJ,WACI,IAAMb,EAAiB,CACnBC,OAAQ,MACRC,QAASZ,KAGb,OAAOe,MAAMV,EAAU,YAAaK,GAAgBM,KAAKC,IAAgBD,MAAK,SAAAxD,GAG1E,OAFA6D,QAAQC,IAAI9D,GACZG,aAAauD,QAAQ,OAAQzD,KAAKqD,UAAUtD,IACrCA,OAdf,SAAS2D,KAELxD,aAAa6D,WAAW,QAkB5B,SAASP,GAAeQ,GACpB,OAAOA,EAASC,OAAOV,MAAK,SAAAU,GACxB,IAAMC,EAAOD,GAAQjE,KAAKC,MAAMgE,GAChC,IAAMD,EAASG,GAAI,CACS,MAApBH,EAASI,QAETV,KAIJ,IAAMvC,EAAS+C,GAAQA,EAAK1C,SAAYwC,EAASK,WACjD,OAAOC,QAAQC,OAAOpD,GAG1B,OAAO+C,KC5ER,IAAMM,GAAkB,CAE3Bd,UACAe,gBAOJ,WAII,OAAOnB,MAAMV,EAAQ,aAHE,CACnBM,OAAQ,QAGXK,KAAKC,IACLD,MAAK,SAAA9B,GACF,OAAOA,MAbXiD,mBAiBJ,SAA4BC,GAIxB,OAAOrB,MAAMV,EAAQ,kCAAkC+B,EAHhC,CACnBzB,OAAQ,QAGXK,KAAKC,IACLD,MAAK,SAAA5B,GACF,OAAOA,MAvBXiD,eAyCJ,SAAwBjB,EAAQgB,GAC5B,IAAM1B,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMpD,KAAKqD,UAAUM,IAEzB,OAAOL,MAAMV,EAAQ,wBAAwB+B,EAAI1B,GAEhDM,MAAK,SAAA5B,GACF,OAAOA,MAjDXkD,eAsDJ,SAAwBF,GAIpB,OAAOrB,MAAMV,EAAQ,wBAAwB+B,EAHtB,CACnBzB,OAAQ,SAIXK,MAAK,SAAA5B,GACF,OAAOA,MA5DXmD,eAyBJ,SAAwBnB,GACpB,IAAMV,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMpD,KAAKqD,UAAUM,IAEzB,OAAOL,MAAMV,EAAQ,oBAAqBK,GAEzCM,MAAK,SAAA5B,GACF,OAAOA,OA+Bf,SAAS+B,KAELxD,aAAa6D,WAAW,QAG5B,SAASP,GAAeQ,GAEpB,OADAJ,QAAQC,IAAIG,GACLA,EAASC,OAAOV,MAAK,SAAAU,GACxB,IAAMC,EAAOD,GAAQjE,KAAKC,MAAMgE,GAChC,IAAKD,EAASG,GAAI,CACU,MAApBH,EAASI,QAETV,KAEJ,IAAMvC,EAAS+C,GAAQA,EAAK1C,SAAYwC,EAASK,YAAc,kCAC/D,OAAOC,QAAQC,OAAOpD,GAE1B,OAAO+C,KCxFR,IAAMa,GAAgB,CACzBC,cAMJ,WAKI,OAAO1B,MAAMV,EAAQ,WAJE,CACnBM,OAAQ,QAIXK,KAAKC,IACLD,MAAK,SAAAzB,GAEF,OADA8B,QAAQC,IAAI/B,GACLA,MAdXmD,iBAkBJ,SAA0BN,GAKtB,OAAOrB,MAAMV,EAAQ,YAAY+B,EAHV,CACnBzB,OAAQ,QAGXK,KAAKC,IACLD,MAAK,SAAAvB,GACF,OAAOA,MAzBXC,WA6BJ,SAAoB0C,GAEhB,IAAM1B,EAAiB,CACnBC,OAAQ,OACRC,QAASZ,KAGb,OAAOe,MAAMV,EAAQ,YAAY+B,EAAG,QAAS1B,GAC5CM,KAAKC,IACLD,MAAK,SAAAvB,GACF,OAAOA,MAtCXE,YA0CJ,SAAqByC,GAEjB,IAAM1B,EAAiB,CACnBC,OAAQ,OACRC,QAASZ,KAEb,OAAOe,MAAMV,EAAQ,YAAY+B,EAAG,SAAU1B,GAC7CM,KAAKC,IACLD,MAAK,SAAAvB,GACF,OAAOA,OASf,SAASwB,GAAeQ,GAEpB,OADAJ,QAAQC,IAAIG,GACLA,EAASC,OAAOV,MAAK,SAAAU,GACxB,IAAMC,EAAOD,GAAQjE,KAAKC,MAAMgE,GAChC,IAAKD,EAASG,GAAI,CACU,MAApBH,EAASI,QARrBlE,aAAa6D,WAAW,QAYhB,IAAM5C,EAAS+C,GAAQA,EAAK1C,SAAYwC,EAASK,YAAc,kCAC/D,OAAOC,QAAQC,OAAOpD,GAE1B,OAAO+C,KC5ER,IAAMgB,GAAc,CACvBpC,MAOJ,SAAeqC,EAAUnC,GACrB,OAAO,SAAAoC,GACHA,EAaO,CAACzE,KAAM5B,EAAcC,oBAAqBe,KAbhC,CAACoF,cAElBtC,GAAYC,MAAMqC,EAAUnC,GAAUO,MAAK,SAAAxD,GAEvCqF,EAWR,SAAiBrF,GACb,MAAO,CAACY,KAAM5B,EAAcE,oBAAqBc,QAZpC2C,CAAQ3C,IACjBnB,EAAQyG,KAAK,mBACd,SAAAlE,GAECiE,EAUR,SAAiBjE,GACb,MAAO,CAACR,KAAM5B,EAAcG,oBAAqBiC,SAXpCmE,CAAQnE,SAhBzBuC,OAwDJ,WAEI,OADAb,GAAYa,SACL,CAAC/C,KAAM5B,EAAcI,SAzD5BmC,SA8BJ,SAAkBqC,GAEd,OADAC,QAAQC,IAAI,kBAAoBF,GACzB,SAAAyB,GACHA,EAASG,EAAQA,MACjB1C,GAAYvB,SAASqC,GAASJ,MAAK,SAAAxD,GAC/BqF,EAWR,SAAiBrF,GACb,MAAO,CAACY,KAAM5B,EAAcS,qBAAsBO,QAZrC2C,CAAQ3C,IACjBnB,EAAQyG,KAAK,QACd,SAAAlE,GACCiE,EAWR,SAAiBjE,GACb,MAAO,CAACR,KAAM5B,EAAcU,qBAAsB0B,SAZrCmE,CAAQnE,QAKzB,SAASoE,EAAQxF,GACb,MAAO,CAACY,KAAM5B,EAAcQ,qBAAsBQ,UA3CtDyF,OA2DJ,WACI,OAAO,SAAAJ,GACHA,EAKO,CAACzE,KAAM5B,EAAcK,iBAJ5ByD,GAAY2C,SAASjC,MAAK,SAAAvC,GAAK,OAAIoE,EAMvC,SAAiBpE,GACb,MAAO,CAACL,KAAM5B,EAAcM,eAAgB2B,SAPA0B,CAAQ1B,OAAS,SAAAG,GAAK,OAAIiE,EAS1E,SAAiBjE,GACb,MAAO,CAACR,KAAM5B,EAAcO,eAAgB6B,SAVmCmE,CAAQnE,SA7D3F2C,eA4EJ,WACI,OAAO,SAAAsB,GACHA,EAKO,CAACzE,KAAM5B,EAAcW,mBAJ5BmD,GAAYiB,iBAAiBP,MAAK,SAAAvC,GAAK,OAAIoE,EAM/C,SAAiBpE,GACb,MAAO,CAACL,KAAM5B,EAAcY,iBAAkBqB,SAPM0B,CAAQ1B,UCpF7D,IAAMyE,GAAkB,CAC3BhB,gBAQJ,WACI,OAAO,SAAAW,GACHA,EAUO,CAACzE,KAAMd,IATd2E,GAAgBC,kBAAkBlB,MAAK,SAAA9B,GACnC2D,EAUR,SAAiB3D,GACb,MAAO,CAACd,KAAMd,EAA+B4B,aAXhCiB,CAAQjB,OAClB,SAAAN,GACCiE,EAWR,SAAiBjE,GACb,MAAO,CAACR,KAAMd,EAA+BsB,SAZhCmE,CAAQnE,SAbzBuD,mBAyGJ,SAA4BC,GACxB,OAAO,SAAAS,GACHA,EAOO,CAACzE,KAAMd,IANd2E,GAAgBE,mBAAmBC,GAAIpB,MAAK,SAAA5B,GACxCyD,EAOR,SAAiBzD,GACb,MAAO,CAAChB,KAAMd,EAAuC8B,YARxCe,CAAQf,SA5GzBiD,eAgFJ,SAAwBjB,EAASgB,GAE7B,OAAO,SAAAS,GACHA,EAUO,CAACzE,KAAMd,IATd2E,GAAgBI,eAAejB,EAASgB,GAAIpB,MAAK,SAAA5B,GAC7CyD,EAUR,SAAiBzD,GACb,MAAO,CAAChB,KAAMd,EAAsC8B,YAXvCe,CAAQf,IACjB/C,EAAQyG,KAAK,oBACd,SAAAlE,GACCiE,EAUR,SAAiBjE,GACb,MAAO,CAACR,KAAMd,EAAsCsB,SAXvCmE,CAAQnE,SAvFzB2D,eAuDJ,SAAwBnB,GAEpB,OAAO,SAAAyB,GACHA,EAUO,CAACzE,KAAMd,IATd2E,GAAgBM,eAAenB,GAASJ,MAAK,SAAA5B,GACzCyD,EAUR,SAAiBzD,GACb,MAAO,CAAChB,KAAMd,EAAsC8B,YAXvCe,CAAQf,IACjB/C,EAAQyG,KAAK,oBACd,SAAAlE,GACCiE,EAUR,SAAiBjE,GACb,MAAO,CAACR,KAAMd,EAAsCsB,SAXvCmE,CAAQnE,SA9DzB0D,eA0BJ,SAAwBF,GACpB,OAAO,SAAAS,GACHA,EAgBO,CAACzE,KAAMd,IAfd2E,GAAgBK,eAAeF,GAAIpB,MAAK,SAAA5B,GAChCA,EAASwC,IACTiB,EAeZ,SAAiBzD,GACb,MAAO,CAAChB,KAAMd,EAAsC8B,YAhBnCe,CAAQf,IACjByD,EAASK,GAAgBhB,oBAEzBW,EAASE,EAAQ,gCAGtB,SAAAnE,GACCiE,EAASE,EAAQnE,QAWzB,SAASmE,EAAQnE,GACb,MAAO,CAACR,KAAMd,EAAsCsB,YCtDrD,IAAMuE,GAAgB,CACzBV,cAOJ,WACI,OAAO,SAAAI,GACHA,EASO,CAACzE,KAAMb,IARdiF,GAAcC,gBAAgBzB,MAAK,SAAAzB,GAC/BsD,EASR,SAAiBtD,GACb,MAAO,CAACnB,KAAMb,EAA6BgC,WAV9BY,CAAQZ,OAClB,SAAAX,GACCiE,EAUR,SAAiBjE,GACb,MAAO,CAACR,KAAMb,EAA6BqB,SAX9BmE,CAAQnE,SAZzB8D,iBA2BJ,SAA0BN,GAEtB,OAAO,SAAAS,GACHA,EAOO,CAACzE,KAAMb,IANdiF,GAAcE,iBAAiBN,GAAIpB,MAAK,SAAAvB,GACpCoD,EAOR,SAAiBpD,GACb,MAAO,CAACrB,KAAMb,EAAoCkC,UARrCU,CAAQV,SA/BzBC,WA4CJ,SAAoB0D,GAEhB,OAAO,SAAAP,GACHA,EASO,CAACzE,KAAMb,IARdiF,GAAc9C,WAAW0D,GAAUpC,MAAK,SAAAvB,GACpCoD,EASR,SAAiBpD,GACb,MAAO,CAACrB,KAAMb,EAAqCkC,UAVtCU,CAAQV,IACjBoD,EAASF,GAAYpB,kBACrBlF,EAAQyG,KAAK,qBAlDrBnD,YA+DJ,SAAqByD,GAEjB,OAAO,SAAAP,GACHA,EASO,CAACzE,KAAMb,IARdiF,GAAc7C,YAAYyD,GAAUpC,MAAK,SAAAvB,GACrCoD,EASR,SAAiBpD,GACb,MAAO,CAACrB,KAAMb,EAAsCkC,UAVvCU,CAAQV,IACjBoD,EAASF,GAAYpB,kBACrBlF,EAAQyG,KAAK,sB,aC5EZO,GAAe,SAAC,GAAD,IAAcC,EAAd,EAAGC,UAAyBC,EAA5B,qCACxB,kBAAC,IAAD,iBAAWA,EAAX,CAAiBC,OAAQ,SAAAC,GAAK,OAC1B/F,aAAaC,QAAQ,QACf,kBAAC0F,EAAcI,GACf,kBAAC,IAAD,CAAUC,GAAI,CAAEC,SAAU,IAAK1F,MAAO,CAAE2F,KAAMH,EAAMI,kB,gFCM5DC,G,kDACF,WAAYL,GAAQ,IAAD,8BACf,cAAMA,IAEDxF,MAAQ,CACT0E,SAAU,GACVnC,SAAU,GACVuD,WAAW,GAGf,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,iBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,iBAVL,E,yDAaNE,GACWC,KAAKnG,MAAlB8F,WAEHK,KAAKC,SAAS,CAACN,WAAW,IAHlB,MAKUI,EAAEG,OAAjBC,EALK,EAKLA,KAAMC,EALD,EAKCA,MACbJ,KAAKC,SAAL,gBAAgBE,EAAOC,M,mCAGdL,GACTA,EAAEM,iBAEFL,KAAKC,SAAS,CAACN,WAAW,IAHd,MAIiBK,KAAKnG,MAA3B0E,EAJK,EAILA,SAAUnC,EAJL,EAIKA,SACVoC,EAAYwB,KAAKX,MAAjBb,SACHD,GAAYnC,GACZoC,EAASF,GAAYpC,MAAMqC,EAAUnC,M,+BAIpC,MAEmC4D,KAAKnG,MAAtC0E,EAFF,EAEEA,SAAUnC,EAFZ,EAEYA,SAAUuD,EAFtB,EAEsBA,UACpBlF,EAAgBuF,KAAKX,MAArB5E,aACP,OACI,yBAAK6F,UAAU,aACX,yBAAKA,UAAU,aAEXX,GAAalF,GAAgBA,EAAaF,OAASI,MAAMF,EAAaF,OAEtE,yBAAK+F,UAAU,6BACX,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAKF,UAAU,0BACX,kBAACG,GAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,MACpB,kBAACC,GAAA,EAAD,CAAMP,UAAU,QACZ,kBAACQ,GAAA,EAAD,CAAUR,UAAU,OAChB,qCACA,0BAAMH,KAAK,OACPY,SACIf,KAAKF,cAET,yBAAKQ,UACD,cACAX,IAAcpB,EAAW,aAAe,KAGxC,2BAAOyC,QAAQ,YAAf,SACA,2BAAOjH,KAAK,OAAOuG,UAAU,eAAeH,KAAK,WAC7CC,MAAO7B,EACP0C,SACIjB,KAAKJ,eATjB,IAWID,IAAcpB,GAAY,yBAAK+B,UAAU,cAAf,wBAX9B,KAaA,yBAAKA,UACD,cACAX,IAAcvD,EAAW,aAAe,KAGxC,2BAAO4E,QAAQ,YAAf,YACA,2BAAOjH,KAAK,WAAWuG,UAAU,eAAeH,KAAK,WACjDC,MAAOhE,EACP6E,SACIjB,KAAKJ,eATjB,IAWID,IAAcvD,GAAY,yBAAKkE,UAAU,cAAf,wBAX9B,KAcA,kBAACE,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAKS,GAAG,KAAKC,GAAG,KACZ,iCACI1G,GAAgBA,EAAaJ,QAAU,4BAAQ+G,MAAM,kBAAkBrH,KAAK,SAASsH,UAAQ,GACzF,0BAAMD,MAAM,+BAA+BE,KAAK,SAASC,cAAY,SADlC,cAG3B,kBAACC,GAAA,EAAD,CAAQlB,UAAU,qBAC1B,wCALR,OAUR,sDAEI,kBAAC,KAAD,CAAMhB,GAAI,aAAV,iC,GAhG5BmC,IAAMxC,WAoH9B,IAAMyC,GAAqBC,aAL3B,SAAyB9H,GAErB,MAAO,CAACY,aADeZ,EAAhBY,gBAIgBkH,CAAyBjC,I,SClH9CkC,G,kDAEF,WAAYvC,GAAQ,IAAD,8BACf,cAAMA,IAiBVwC,SAAW,SAAC9B,GACR/H,EAAQyG,KAAK,MAhBb,EAAK5E,MAAQ,CACTsG,KAAM,GACN5B,SAAU,GACVpC,MAAO,GACPC,SAAU,GACV0F,qBAAsB,GACtBnC,WAAW,GAGf,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,iBACpB,EAAKkC,YAAc,EAAKA,YAAYlC,KAAjB,iBACnB,EAAKmC,sBAAwB,EAAKA,sBAAsBnC,KAA3B,iBAC7B,EAAKoC,YAAc,EAAKA,YAAYpC,KAAjB,iBAfJ,E,yDAuBNE,GAAI,IAAD,EACUA,EAAEG,OAAjBC,EADK,EACLA,KAAMC,EADD,EACCA,MACbJ,KAAKC,SAAL,gBAAgBE,EAAOC,M,kCAGfL,GAERC,KAAKC,SAAS,CAACN,WAAW,IAFf,IAGJnB,EAAYwB,KAAKX,MAAjBb,SAHI,EAUPwB,KAAKnG,MALLsG,EALO,EAKPA,KACA5B,EANO,EAMPA,SACApC,EAPO,EAOPA,MACAC,EARO,EAQPA,SACA0F,EATO,EASPA,qBAEJ,GAAI3B,GAAQ5B,GAAYpC,GAASC,GAAY0F,GAAyB1F,EAAS8F,QAAU,GAAO9F,IAAa0F,EAAuB,CAChI,IAAI/E,EAAU,CACVZ,MAAO6D,KAAKnG,MAAMsC,MAClBgE,KAAMH,KAAKnG,MAAMsG,KACjB5B,SAAUyB,KAAKnG,MAAM0E,SACrBnC,SAAU4D,KAAKnG,MAAMuC,SACrB0F,qBAAsB9B,KAAKnG,MAAMiI,sBAGrC9E,QAAQC,IAAIF,GACZyB,EAASF,GAAY5D,SAASqC,O,kCAI1BZ,GAGR,SAAIA,IADe,wJACKgG,KAAKhG,M,4CAOXiE,GAClBJ,KAAKiC,YAAY7B,EAAMjE,S,+BAIjB,IAAD,EAQD6D,KAAKnG,MANLsG,EAFC,EAEDA,KACA5B,EAHC,EAGDA,SACApC,EAJC,EAIDA,MACAC,EALC,EAKDA,SACA0F,EANC,EAMDA,qBACAnC,EAPC,EAODA,UAEGjF,EAAYsF,KAAKX,MAAjB3E,SACP,OACI,yBAAK4F,UAAU,aACX,yBAAKA,UAAU,aAEXX,GAAajF,GAAYA,EAASH,OAASI,MAAMD,EAASH,OAE1D,yBAAK+F,UAAU,6BACX,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAKF,UAAU,0BACX,kBAACG,GAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KACpB,kBAACC,GAAA,EAAD,CAAMP,UAAU,QACZ,kBAACQ,GAAA,EAAD,CAAUR,UAAU,OAChB,kBAAC8B,GAAA,EAAD,KACI,wCAEA,yBAAK9B,UACD,cACAX,IAAcQ,EAAO,aAAe,KAGpC,2BAAOa,QAAQ,QAAf,QACA,2BAAOjH,KAAK,OAAOuG,UAAU,eAAeH,KAAK,OAC7CC,MAAOD,EACPc,SACIjB,KAAKJ,aAETyC,UAAQ,IAXhB,IAYI1C,IAAcQ,GAAQ,yBAAKG,UAAU,cAAf,oBAZ1B,KAeA,yBAAKA,UACD,cACAX,IAAcpB,EAAW,aAAe,KAGxC,2BAAOyC,QAAQ,QAAf,aACA,2BAAOjH,KAAK,OAAOuG,UAAU,eAAeH,KAAK,WAC7CC,MAAO7B,EACP0C,SACIjB,KAAKJ,eATjB,IAWID,IAAcpB,GAAY,yBAAK+B,UAAU,cAAf,yBAG1BX,GAAapB,GAAYA,EAAS2D,OAAS,GAAK,yBAAK5B,UAAU,cAAf,yBAdpD,KAiBA,yBAAKA,UACD,cACAX,IAAcxD,EAAQ,aAAe,KAGrC,2BAAO6E,QAAQ,SAAf,SACA,2BAAOjH,KAAK,OAAOuG,UAAU,eAAeH,KAAK,QAC7CC,MAAOjE,EACP8E,SACIjB,KAAKJ,eATjB,IAWID,IAAcxD,GAAS,yBAAKmE,UAAU,cAAf,qBAX3B,KAaA,yBAAKA,UACD,cACAX,IAAcvD,EAAW,aAAe,KAGxC,2BAAO4E,QAAQ,UAAf,YACA,2BAAOjH,KAAK,WAAWuG,UAAU,eAAeH,KAAK,WACjDC,MAAOhE,EACP6E,SACIjB,KAAKJ,eATjB,IAWID,IAAcvD,GAAY,yBAAKkE,UAAU,cAAf,wBAG1BX,GAAavD,GAAYA,EAAS8F,OAAS,GAAK,0BAAM5B,UAAU,cAAhB,qCAdpD,KAgBA,yBAAKA,UACD,cACAX,IAAcmC,EAAuB,aAAe,KAGpD,2BAAOd,QAAQ,UAAf,oBACA,2BAAOjH,KAAK,WAAWuG,UAAU,eAAeH,KAAK,uBACjDC,MAAO0B,EACPb,SACIjB,KAAKJ,eATjB,IAWID,IAAcmC,GAAwB,yBAAKxB,UAAU,cAAf,gCAX1C,KAcA,kBAACE,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAKS,GAAG,KAAKC,GAAG,KACZ,iCACIzG,GAAYA,EAASL,QAAU,4BAAQ+G,MAAM,oBAAoBrH,KAAK,SAASsH,UAAQ,GACnF,0BAAMD,MAAM,+BAA+BE,KAAK,SAASC,cAAY,SAD1C,cAGnB,kBAACC,GAAA,EAAD,CAAQlB,UAAU,oBAAoBgC,OAAK,EACnDC,QACIvC,KAAK+B,aAET,2CARR,MAYJ,kBAACtB,GAAA,EAAD,CAAKS,GAAG,KAAKC,GAAG,KACZ,kBAACK,GAAA,EAAD,CAAQlB,UAAU,oBAAoBgC,OAAK,EACvCC,QACIvC,KAAK6B,UAET,4CAMhB,6BACI,oFAAgE,6BAChE,2F,GArMrBJ,IAAMxC,WAwNjC,IAAMyC,GAAqBC,aAL3B,SAAyB9H,GAErB,MAAO,CAACa,SADWb,EAAZa,YAIgBiH,CAAyBC,I,wEC3LrCY,OAvCf,SAAkBnD,GAAQ,IAAD,EAEGoD,oBAAS,GAFZ,oBAEdC,EAFc,KAERC,EAFQ,OAGOF,mBAAS,MAHhB,oBAGdvC,EAHc,KAGN0C,EAHM,KAIfC,EAAMC,iBAAO,MAOnB,OACI,yBAAKD,IAAKA,GACN,kBAAC,KAAD,CAAQN,QAPI,SAACQ,GACjBJ,GAASD,GACTE,EAAUG,EAAM7C,UAMR,+CAEJ,kBAAC8C,GAAA,EAAD,CAASN,KAAMA,EACXxC,OAAQA,EACR+C,UAAU,SACVC,UACIL,EAAIM,SAER,kBAACC,GAAA,EAAD,CAASrF,GAAG,qBACR,kBAACqF,GAAA,EAAQC,MAAT,CAAeC,GAAG,MAEdjE,EAAMlG,KAAKgH,MAEf,kBAACiD,GAAA,EAAQG,QAAT,KACI,gCACIlE,EAAMlG,KAAKgD,YCNxBqH,G,uKAlBX,IAAMC,EAAWnK,aAAaC,QAAQ,QAChCJ,EAAOsK,GAAYrK,KAAKC,MAAMoK,GAEpC,OACE,oCACE,kBAACC,GAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,QAExB,kBAACC,GAAA,EAAD,CAAKvD,UAAU,WACb,kBAACuD,GAAA,EAAIC,KAAL,CAAUC,KAAK,gBAAf,WACA,kBAACF,GAAA,EAAIC,KAAL,CAAUC,KAAK,iBAAf,iBACA,kBAACF,GAAA,EAAIC,KAAL,CAAUC,KAAK,KAAf,WAEF,kBAAC,GAAD,CAAU5K,KAAMA,U,GAhBDsI,IAAMxC,WCQzB+E,G,kDAEF,WAAY3E,GAAQ,IAAD,8BACf,cAAMA,IAYVpB,eAAiB,SAACF,GACd,EAAKsB,MAAMb,SAASK,GAAgBZ,eAAeF,KAdpC,EAiBnBkG,YAAc,WACV,EAAK5E,MAAMrH,QAAQyG,KAAK,iBAlBT,EAqBnBT,eAAiB,SAACD,GACdf,QAAQC,IAAIc,GACZ,EAAKsB,MAAMrH,QAAQyG,KAAK,CACpBc,SAAU,WAAaxB,KAxBZ,EA4BnBmG,aAAe,SAACnG,GACZoG,OAAOC,QAAQ,+CAAiD,EAAKpG,eAAeD,IA7BrE,EAgCnBsG,cAAgB,SAACC,GACbH,OAAOC,QAAQ,+CAAiD,EAAKnG,eAAeqG,IA/BpF,EAAKrG,eAAiB,EAAKA,eAAe4B,KAApB,iBACtB,EAAKwE,cAAgB,EAAKA,cAAcxE,KAAnB,iBACrB,EAAKqE,aAAe,EAAKA,aAAarE,KAAlB,iBACpB,EAAKoE,YAAc,EAAKA,YAAYpE,KAAjB,iBACnB,EAAK7B,eAAiB,EAAKA,eAAe6B,KAApB,iBANP,E,gEAUfG,KAAKX,MAAMb,SAASK,GAAgBhB,qB,+BA2B9B,IAAD,OACEhD,EAAamF,KAAKX,MAAlBxE,UAEP,OACI,yBAAKyF,UAAU,mBACX,kBAAC,GAAD,MADJ,IAEIzF,EAAUR,SAAW,yBAAK+G,MAAM,iCAC5B,6BACA,6BACA,yBAAKA,MAAM,iBAAiBE,KAAK,UAC7B,0BAAMF,MAAM,WAAZ,gBAKRvG,EAAUN,OAASI,MAAM,oBAAsBE,EAAUN,OAGzDM,EAAUP,OAAS,kBAACkG,GAAA,EAAD,KACf,kBAACC,GAAA,EAAD,KACI,kBAACI,GAAA,EAAD,KACI,kBAAC0D,GAAA,EAAD,KACI,uBAAGjE,UAAU,wBADjB,iBAIA,kBAACQ,GAAA,EAAD,KACI,4BAAQR,UAAU,kBACdiC,QACI,WACI,EAAK0B,gBAHjB,gBAMA,6BACA,6BACA,kBAACO,GAAA,EAAD,CAAOC,OAAK,EAACC,UAAQ,EAACC,SAAO,EAACC,YAAU,EAACC,KAAK,MAC1C,+BACI,4BACI,oCACA,qCACA,mCACA,sCACA,yCAGR,mCACIhK,EAAUP,MAAMwK,KAAI,SAACC,EAAMhH,GACvB,OAAO,wBAAIiH,IAAKjH,GACZ,4BACIgH,EAAK5E,MAET,4BACI4E,EAAK5I,OAET,4BACI4I,EAAKE,KAET,4BACIF,EAAKG,QAET,4BACI,6BACI,4BAAQ5E,UAAU,kBACdiC,QACI,WACI,EAAK2B,aAAaa,EAAKT,OAHnC,QAMC,IACD,4BAAQhE,UAAU,iBACdiC,QACI,WACI,EAAK8B,cAAcU,EAAKT,OAHpC,gBAxBpB,UAxCxB,S,GA3CkB7C,IAAMxC,WAqIpC,IAAMkG,GAAoBxD,aAL1B,SAAyB9H,GAErB,MAAO,CAACgB,UADYhB,EAAbgB,aAIe8G,CAAyBqC,I,SClI7CoB,G,kDAEF,WAAY/F,GAAQ,IAAD,8BACf,cAAMA,IAiBVwC,SAAW,SAAC9B,GACR/H,EAAQyG,KAAK,kBAhBb,EAAK5E,MAAQ,CACTsG,KAAM,GACNhE,MAAO,GACP8I,IAAK,GACLC,OAAQ,GACRvF,WAAW,GAGf,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,iBACpB,EAAKwF,mBAAqB,EAAKA,mBAAmBxF,KAAxB,iBAC1B,EAAKkC,YAAc,EAAKA,YAAYlC,KAAjB,iBACnB,EAAKmC,sBAAwB,EAAKA,sBAAsBnC,KAA3B,iBAC7B,EAAKoC,YAAc,EAAKA,YAAYpC,KAAjB,iBAfJ,E,yDAuBNE,GAAI,IAAD,EACUA,EAAEG,OAAjBC,EADK,EACLA,KAAMC,EADD,EACCA,MACbJ,KAAKC,SAAL,gBAAgBE,EAAOC,M,yCAGRL,GACf,IADkB,EAEIA,EAAEG,OAAjBC,EAFW,EAEXA,KAAMC,EAFK,EAELA,MADF,aAEJ+B,KAAK/B,IACRJ,KAAKC,SAAL,gBAAgBE,EAAOC,M,kCAInBjE,GAGR,SAAIA,IADe,wJACKgG,KAAKhG,M,4CAOXiE,GAClBJ,KAAKiC,YAAY7B,EAAMjE,S,kCAGf4D,GACRC,KAAKC,SAAS,CAACN,WAAW,IADf,IAEJnB,EAAYwB,KAAKX,MAAjBb,SAFI,EAGwBwB,KAAKnG,MAAjCsG,EAHI,EAGJA,KAAMhE,EAHF,EAGEA,MAAO8I,EAHT,EAGSA,IAAKC,EAHd,EAGcA,OACzB,GAAI/E,GAAQhE,GAAS8I,GAAOC,GAAUD,EAAM,KAAOjF,KAAKiC,YAAY9F,GAAQ,CACxE,IAAIY,EAAU,CACVoD,KAAMH,KAAKnG,MAAMsG,KACjBhE,MAAO6D,KAAKnG,MAAMsC,MAClB+I,OAAQlF,KAAKnG,MAAMqL,OACnBD,IAAKjF,KAAKnG,MAAMoL,KAEpBzG,EAASK,GAAgBX,eAAenB,O,+BAItC,IAAD,EAODiD,KAAKnG,MALLsG,EAFC,EAEDA,KACAhE,EAHC,EAGDA,MACA8I,EAJC,EAIDA,IACAC,EALC,EAKDA,OACAvF,EANC,EAMDA,UAEG1E,EAAkB+E,KAAKX,MAAvBpE,eACP,OACI,yBAAKqF,UAAU,mCACX,kBAAC,GAAD,MACA,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAKF,UAAU,0BACX,kBAACG,GAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KACpB,kBAACC,GAAA,EAAD,CAAMP,UAAU,QACZ,kBAACQ,GAAA,EAAD,CAAUR,UAAU,OAChB,kBAAC8B,GAAA,EAAD,KACI,4CAEA,yBAAK9B,UACD,cACAX,IAAcQ,EAAO,aAAe,KAGpC,2BAAOa,QAAQ,QAAf,QACA,2BAAOjH,KAAK,OAAOuG,UAAU,eAAeH,KAAK,OAC7CC,MAAOD,EACPc,SACIjB,KAAKJ,eATjB,IAWID,IAAcQ,GAAQ,yBAAKG,UAAU,cAAf,oBAX1B,KAcA,yBAAKA,UACD,cACAX,IAAcxD,EAAQ,aAAe,KAGrC,2BAAO6E,QAAQ,SAAf,SACA,2BAAOjH,KAAK,OAAOuG,UAAU,eAAeH,KAAK,QAC7CC,MAAOjE,EACP8E,SACIjB,KAAKJ,eATjB,IAWID,IAAcxD,GAAS,yBAAKmE,UAAU,cAAf,qBAX3B,KAaA,yBAAKA,UACD,cACAX,IAAcuF,EAAS,aAAe,KAGtC,2BAAOlE,QAAQ,UAAf,UACA,2BAAOjH,KAAK,OAAOuG,UAAU,eAAeH,KAAK,SAC7CC,MAAO8E,EACPjE,SACIjB,KAAKqF,qBATjB,IAWI1F,IAAcuF,GAAU,yBAAK5E,UAAU,cAAf,sBAX5B,KAaA,yBAAKA,UACD,cACAX,IAAcsF,EAAM,aAAe,KAGnC,2BAAOjE,QAAQ,OAAf,OACA,2BAAOjH,KAAK,OAAOuG,UAAU,eAAeH,KAAK,MAC7CC,MAAO6E,EACPhE,SACIjB,KAAKqF,qBATjB,IAWI1F,IAAcsF,GAAO,yBAAK3E,UAAU,cAAf,mBAGrBX,GAAcsF,EAAM,KAAQ,yBAAK3E,UAAU,cAAf,kCAdhC,KAiBA,kBAACgF,GAAA,EAAD,CAAYhF,UAAU,OAClB,kBAACE,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAKS,GAAG,KAAKC,GAAG,KACZ,iCACIlG,GAAkBA,EAAeZ,QAAU,4BAAQ+G,MAAM,oBAAoBrH,KAAK,SAASsH,UAAQ,GAC/F,0BAAMD,MAAM,+BAA+BE,KAAK,SAASC,cAAY,SAD9B,eAG/B,kBAACC,GAAA,EAAD,CAAQlB,UAAU,oBAAoBgC,OAAK,EACnDC,QACIvC,KAAK+B,aAET,uCARR,MAaJ,kBAACtB,GAAA,EAAD,CAAKS,GAAG,KAAKC,GAAG,KACZ,kBAACK,GAAA,EAAD,CAAQlB,UAAU,oBAAoBgC,OAAK,EACvCC,QACIvC,KAAK6B,UAET,uD,GArK9BJ,IAAMxC,WA0LhC,IAAMkG,GAAoBxD,aAL1B,SAAyB9H,GAErB,MAAO,CAACoB,eADiBpB,EAAlBoB,kBAIe0G,CAAyByD,IC3L7CG,G,kDAEF,WAAYlG,GAAQ,IAAD,8BACf,cAAMA,IAsCVwC,SAAW,SAAC9B,GACR/H,EAAQyG,KAAK,kBAtCb,EAAK5E,MAAQ,CACTyK,IAAK,GACLnE,KAAM,GACNhE,MAAO,GACP8I,IAAK,GACLC,OAAQ,GACRvF,WAAW,GAGf,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,iBACpB,EAAKkC,YAAc,EAAKA,YAAYlC,KAAjB,iBACnB,EAAKwF,mBAAqB,EAAKA,mBAAmBxF,KAAxB,iBAbX,E,gEAiBf7C,QAAQC,IAAI+C,KAAKX,MAAMmG,MAAMC,OAAO1H,IACpCiC,KAAKX,MAAMb,SAASK,GAAgBf,mBAAmBkC,KAAKX,MAAMmG,MAAMC,OAAO1H,O,2CAI/Ef,QAAQC,IAAI,gB,gDAGUyI,GACtB1I,QAAQC,IAAI,iBAAkByI,GAC9B,IAAIpI,EAAOoI,EAAU5K,gBACjBwC,GAAQA,EAAKhD,OACb0F,KAAKC,SAAS,CACVqE,IAAKhH,EAAKhD,MAAMgK,IAChBnE,KAAM7C,EAAKhD,MAAM6F,KACjBhE,MAAOmB,EAAKhD,MAAM6B,MAClB+I,OAAQ5H,EAAKhD,MAAM4K,OACnBD,IAAK3H,EAAKhD,MAAM2K,Q,mCAUflF,GAAI,IAAD,EACUA,EAAEG,OAAjBC,EADK,EACLA,KAAMC,EADD,EACCA,MACbJ,KAAKC,SAAL,gBAAgBE,EAAOC,M,yCAGRL,GACf,IADkB,EAEIA,EAAEG,OAAjBC,EAFW,EAEXA,KAAMC,EAFK,EAELA,MADF,aAEJ+B,KAAK/B,IACRJ,KAAKC,SAAL,gBAAgBE,EAAOC,M,4CAITA,GAGlB,SAAIA,IADe,wJACK+B,KAAK/B,EAAMjE,U,kCAO3B4D,GACRC,KAAKC,SAAS,CAACN,WAAW,IADf,IAEJnB,EAAYwB,KAAKX,MAAjBb,SAFI,EAGwBwB,KAAKnG,MAAjCsG,EAHI,EAGJA,KAAMhE,EAHF,EAGEA,MAAO8I,EAHT,EAGSA,IAAKC,EAHd,EAGcA,OACzB,GAAI/E,GAAQhE,GAAS8I,GAAOC,EAAQ,CAChC,IAAInI,EAAU,CACVoD,KAAMH,KAAKnG,MAAMsG,KACjBhE,MAAO6D,KAAKnG,MAAMsC,MAClB+I,OAAQlF,KAAKnG,MAAMqL,OACnBD,IAAKjF,KAAKnG,MAAMoL,KAEpBzG,EAASK,GAAgBb,eAAejB,EAASiD,KAAKnG,MAAMyK,S,+BAI1D,IAAD,EACqCtE,KAAKX,MAAxCvE,EADF,EACEA,gBAAiBE,EADnB,EACmBA,eADnB,EAQDgF,KAAKnG,MALLsG,EAHC,EAGDA,KACAhE,EAJC,EAIDA,MACA8I,EALC,EAKDA,IACAC,EANC,EAMDA,OACAvF,EAPC,EAODA,UAEJ,OACI,yBAAKW,UAAU,mCAEXxF,EAAgBT,SAAW,yBAAK+G,MAAM,iCAClC,6BACA,6BACA,yBAAKA,MAAM,iBAAiBE,KAAK,UAC7B,0BAAMF,MAAM,WAAZ,gBAKRtG,EAAgBP,OAASI,MAAM,oBAAsBG,EAAgBP,OAGrEO,EAAgBR,OAAS,kBAACiG,GAAA,EAAD,KACrB,kBAACC,GAAA,EAAD,CAAKF,UAAU,0BACX,kBAACG,GAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KACpB,kBAACC,GAAA,EAAD,CAAMP,UAAU,QACZ,kBAACQ,GAAA,EAAD,CAAUR,UAAU,OAChB,kBAAC8B,GAAA,EAAD,KACI,+CAEA,6BAEI,yBAAK9B,UACD,cACAX,IAAcQ,EAAO,aAAe,KAGpC,2BAAOa,QAAQ,QAAf,QACA,2BAAOjH,KAAK,OAAOuG,UAAU,eAAeH,KAAK,OAC7CC,MAAOD,EACPc,SACIjB,KAAKJ,eATjB,IAWID,IAAcQ,GAAQ,yBAAKG,UAAU,cAAf,oBAX1B,KAaA,yBAAKA,UACD,cACAX,IAAcxD,EAAQ,aAAe,KAGrC,2BAAO6E,QAAQ,SAAf,SACA,2BAAOjH,KAAK,OAAOuG,UAAU,eAAeH,KAAK,QAC7CC,MAAOjE,EACP8E,SACIjB,KAAKJ,eATjB,IAWID,IAAcxD,GAAS,yBAAKmE,UAAU,cAAf,qBAX3B,KAaA,yBAAKA,UACD,cACAX,IAAcuF,EAAS,aAAe,KAGtC,2BAAOlE,QAAQ,UAAf,UACA,2BAAOjH,KAAK,OAAOuG,UAAU,eAAeH,KAAK,SAC7CC,MAAO8E,EACPjE,SACIjB,KAAKJ,eATjB,IAWID,IAAcuF,GAAU,yBAAK5E,UAAU,cAAf,sBAX5B,KAaA,yBAAKA,UACD,cACAX,IAAcsF,EAAM,aAAe,KAGnC,2BAAOjE,QAAQ,OAAf,OACA,2BAAOjH,KAAK,OAAOuG,UAAU,eAAeH,KAAK,MAC7CC,MAAO6E,EACPhE,SACIjB,KAAKqF,qBATjB,IAWI1F,IAAcsF,GAAO,yBAAK3E,UAAU,cAAf,mBAXzB,MAeJ,kBAACgF,GAAA,EAAD,CAAYhF,UAAU,OAClB,kBAACE,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAKS,GAAG,KAAKC,GAAG,KACZ,iCACInG,GAAkBA,EAAeX,QAAU,4BAAQ+G,MAAM,oBAAoBrH,KAAK,SAASsH,UAAQ,GAC/F,0BAAMD,MAAM,+BAA+BE,KAAK,SAASC,cAAY,SAD9B,aAG/B,kBAACC,GAAA,EAAD,CAAQlB,UAAU,oBAAoBgC,OAAK,EACnDC,QACIvC,KAAK+B,aAET,yCARR,MAaJ,kBAACtB,GAAA,EAAD,CAAKS,GAAG,KAAKC,GAAG,KACZ,kBAACK,GAAA,EAAD,CAAQlB,UAAU,oBAAoBgC,OAAK,EACvCC,QACIvC,KAAK6B,UAET,kDAnG5C,S,GA9FiBJ,IAAMxC,WAsNnC,IAAMkG,GAAoBxD,aAL1B,SAAyB9H,GAErB,MAAO,CAACiB,gBADkCjB,EAAnCiB,gBACkBE,eADiBnB,EAAlBmB,kBAIF2G,CAAyB4D,ICvNnD,SAASI,GAActG,GACnB,IAAM0F,EAAO1F,EAAM0F,KACba,EAAQ,mBACVb,EAAKT,KAGT,OACI,kBAAC7D,GAAA,EAAD,CAAKS,GAAG,KAAKC,GAAG,IAAIT,GAAG,KACnB,kBAACG,GAAA,EAAD,KACI,kBAAC0D,GAAA,EAAD,eAEI,kBAAC,KAAD,CAAMjF,GAAIsG,GAENb,EAAKc,QAGb,kBAAC/E,GAAA,EAAD,aAEI,kBAAC,KAAD,CAAMxB,GAAIsG,GAENb,EAAKe,aACD,6BALZ,YAOIf,EAAKgB,UACR,6BARD,SAUIhB,EAAKiB,SACR,6BAXD,OAaIjB,EAAKkB,OACR,6BAdD,gBAgBIlB,EAAKmB,kBAhBT,O,IAwBVC,G,kLAGEnG,KAAKX,MAAMb,SAASM,GAAcV,mB,+BAG7B,IAEElD,EAAW8E,KAAKX,MAAhBnE,QACP,OACI,yBAAKoF,UAAU,mBACX,kBAAC,GAAD,MADJ,IAEIpF,EAAQb,SAAW,yBAAK+G,MAAM,iCAC1B,6BACA,6BACA,yBAAKA,MAAM,iBAAiBE,KAAK,UAC7B,0BAAMF,MAAM,WAAZ,gBAKRlG,EAAQX,OAASI,MAAM,oBAAsBO,EAAQX,OAGrDW,EAAQZ,OAAS,yBAAKgG,UAAU,mBAC5B,kBAACE,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACI,GAAA,EAAD,KACI,kBAAC0D,GAAA,EAAD,KACI,uBAAGjE,UAAU,wBADjB,WAIA,kBAACQ,GAAA,EAAD,KACI,kBAAC0D,GAAA,EAAD,CAAOI,YAAU,EAACH,OAAK,GACnB,+BACI,4BACI,kBAACjE,GAAA,EAAD,SACItF,EAAQZ,MAAMwK,KAAI,SAACC,EAAMqB,GAAP,OAAiB,kBAAC,GAAD,CAAepB,IAAKoB,EACnDrB,KAAMA,OAFd,aA1BpC,S,GAVUtD,IAAMxC,WA0D5B,IAAM/D,GAAUyG,aALhB,SAAyB9H,GAErB,MAAO,CAACqB,QADUrB,EAAXqB,WAIKyG,CAAyBwE,I,SClGnCR,G,kDACF,WAAYtG,GAAQ,IAAD,8BACf,cAAMA,IACDgH,sBAAwB,EAAKA,sBAAsBxG,KAA3B,iBAC7B,EAAKyG,aAAe,EAAKA,aAAazG,KAAlB,iBACpB,EAAK0G,iBAAmB,EAAKA,iBAAiB1G,KAAtB,iBACxB,EAAK2G,kBAAoB,EAAKA,kBAAkB3G,KAAvB,iBACzB,EAAK4G,iBAAmB,EAAKA,iBAAiB5G,KAAtB,iBANT,E,gEASf7C,QAAQC,IAAI+C,KAAKX,MAAMmG,MAAMC,OAAO1H,IACpCiC,KAAKX,MAAMb,SAASM,GAAcT,iBAAiB2B,KAAKX,MAAMmG,MAAMC,OAAO1H,O,+BAGrE,IAAD,OACE5C,EAAiB6E,KAAKX,MAAtBlE,cACDuL,EAAavL,EAAcb,MAC3BnB,EAAOG,aAAaC,QAAQ,QAClC,OACI,yBAAK+G,UAAU,mCACX,kBAAC,GAAD,MADJ,IAEInF,EAAcd,SAAW,yBAAK+G,MAAM,iCAChC,6BACA,6BACA,yBAAKA,MAAM,iBAAiBE,KAAK,UAC7B,0BAAMF,MAAM,WAAZ,gBAIR,kBAACb,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAAC,KAAD,CAAMH,UAAU,eACZ,kBAACiE,GAAA,EAAD,KACI,4BACI,uBAAGjE,UAAU,mBAEboG,GAAcA,EAAWb,OAE7B,oCACIa,GAAcA,EAAWC,cAAcxG,KAAO,uBAAGG,UAAU,kBAAb,iBAC1CoG,EAAWC,cAAcxG,MACrB,qCAHZ,KAIW,8BAGf,kBAACW,GAAA,EAAD,SACI4F,GAAc,6BACV,kBAAClG,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAKE,GAAI,GACL,kBAAC,KAAD,CAAML,UAAU,eAEZ,kBAACQ,GAAA,EAAD,KACI,yBAAK8F,IACGF,GAAcA,EAAWG,MAE7BC,IAAI,GACJC,MAAM,QACNC,OAAO,UAAS,6BANxB,gBAQI,gCACIN,GAAcA,EAAWZ,aACnB,6BAVd,iBAYIY,GAAcA,EAAWO,UAEzB,6BACA,gDACIP,GAAcA,EAAWR,kBAC5B,8BAjBL,gBAoBIQ,GAAcA,EAAWV,SAC5B,6BArBD,cAuBIU,GAAcA,EAAWT,OAvB7B,OA2BR,kBAACxF,GAAA,EAAD,CAAKE,GAAI,GACL,kBAAC,KAAD,CAAML,UAAU,eACZ,kBAACQ,GAAA,EAAD,KACI,kBAACoG,GAAD,CAAgBC,SACZT,GAAcA,EAAWS,WAE7B,kBAACC,GAAD,CAAaC,aACTX,GAAcA,EAAWW,mBAM7C,6BACA,6BACA,8BACIrH,KAAKsG,aAAanN,EAAMuN,GAAc,gDAAgC1G,KAAKqG,sBAAsBlN,EAAMuN,GAAc,kBAAClF,GAAA,EAAD,CAAQoC,QAAQ,UACjIrB,QACI,WACI,EAAKkE,iBAAiB,EAAGC,EAAWpC,OAHqE,gBAK3F,kBAAC9C,GAAA,EAAD,CAAQoC,QAAQ,UACtCrB,QACI,WACI,EAAKkE,iBAAiB,EAAGC,EAAWpC,OAHtB,eAN9B,MAhDR,Y,4CAwENb,EAAUiD,GAC5B,IACMY,EADOlO,KAAKC,MAAMoK,GACE8D,cAE1B,OADAvK,QAAQC,IAAI,UAAY7B,IACjBkM,GAAiBA,EAAaE,QAAQd,EAAWpC,MAAQ,I,mCAGvDb,EAAUiD,GACnB,IAAMvN,EAAOC,KAAKC,MAAMoK,GAClBgE,EAAUf,EAAWC,cAE3B,OADA3J,QAAQC,IAAI,UAAYwK,GACjBtO,GAAQsO,GAAWtO,EAAKmL,MAAQmD,EAAQnD,M,uCAGlCvG,GACbiC,KAAKX,MAAMb,SAASM,GAAczD,WAAW0C,M,wCAG/BA,GACdiC,KAAKX,MAAMb,SAASM,GAAcxD,YAAYyC,M,uCAGjChE,EAAMgE,GACN,IAAThE,EACAoK,OAAOC,QAAQ,+CAAiDpE,KAAKuG,iBAAiBxI,GACtE,IAAThE,GACPoK,OAAOC,QAAQ,kDAAoDpE,KAAKwG,kBAAkBzI,O,GAhJ1E0D,IAAMxC,WAwJlC,SAASiI,GAAe7H,GACpB,OACI,yBAAKiB,UAAU,mCACX,4CACA,kBAAC,KAAD,cAEIjB,EAAM8H,UAAY9H,EAAM8H,SAAShH,KACpC,6BAHD,eAKId,EAAM8H,UAAY9H,EAAM8H,SAASpB,UACpC,+BAOb,SAASqB,GAAY/H,GAGjB,OADArC,QAAQC,IAAIoC,EAAMgI,cAEd,yBAAK/G,UAAU,mCACX,+CACA,kBAAC,KAAD,SACIjB,EAAMgI,cAAgBhI,EAAMgI,aAAavC,KAAI,SAACC,EAAMhH,GAChD,OACI,kBAAC,KAAD,CAAMiH,IAAKjH,GAEPgH,EAAK5E,KAFT,QAHZ,MAoBZ,IAAM/E,GAASuG,aALf,SAAyB9H,GAErB,MAAO,CAACsB,cADyCtB,EAA1CsB,cACgBE,WAD0BxB,EAA3BwB,WACaC,YADczB,EAAfyB,eAIvBqG,CAAyBgE,I,SCrMlC+B,I,wDACF,WAAYrI,GAAQ,IAAD,0BAGPb,GAFR,cAAMa,IAEoBA,MAAlBb,SAHO,OAIfxG,EAAQ2P,QAAO,SAAClI,EAAU3F,GAEtB0E,EAAS3C,EAAaE,YANX,E,qDAYf,OACI,6BACI,kBAAC,KAAD,MACA,6BACI,6BACI,kBAAC,IAAD,CAAQ/D,QAASA,GACb,6BACI,kBAAC,GAAD,CAAc4P,OAAK,EAACC,KAAK,gBAAgB3I,UAAW8E,KACpD,kBAAC,GAAD,CAAc4D,OAAK,EAACC,KAAK,eAAe3I,UAAWiH,KACnD,kBAAC,GAAD,CAAcyB,OAAK,EAACC,KAAK,eAAe3I,UAAWkG,KACnD,kBAAC,GAAD,CAAcwC,OAAK,EAACC,KAAK,cAAc3I,UAAWqG,KAClD,kBAAC,GAAD,CAAcqC,OAAK,EAACC,KAAK,eAAe3I,UAAWyG,KACnD,kBAAC,IAAD,CAAOiC,OAAK,EAACC,KAAK,IAAI3I,UAAWQ,KACjC,kBAAC,IAAD,CAAOkI,OAAK,EAACC,KAAK,YAAY3I,UAAW0C,c,GA1BvDH,IAAMxC,YA2CxB,IAAM6I,GAAenG,aAPrB,SAAyB9H,GAErB,MAAO,CACHc,MAFcd,EAAVc,SAMSgH,CAAyB+F,I,MC9C9CtI,iBAAQ,kBAAC,IAAD,CAAU7D,MAAOA,GACrB,kBAAC,GAAD,OACSwM,SAASC,eAAe,W","file":"static/js/main.ecfdc636.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();","export const alertConstants = {\r\n    SUCCESS: 'ALERT_SUCCESS',\r\n    ERROR: 'ALERT_ERROR',\r\n    CLEAR: 'ALERT_CLEAR'\r\n};\r\n","export const userConstants = {\r\n    USERS_LOGIN_REQUEST: 'USERS_LOGIN_REQUEST',\r\n    USERS_LOGIN_SUCCESS: 'USERS_LOGIN_SUCCESS',\r\n    USERS_LOGIN_FAILURE: 'USERS_LOGIN_FAILURE',\r\n    \r\n    LOGOUT: 'USERS_LOGOUT',\r\n\r\n    GETALL_REQUEST: 'USERS_GETALL_REQUEST',\r\n    GETALL_SUCCESS: 'USERS_GETALL_SUCCESS',\r\n    GETALL_FAILURE: 'USERS_GETALL_FAILURE',\r\n\r\n\r\n    GET_REGISTER_REQUEST: 'GET_REGISTER_REQUEST',\r\n    GET_REGISTER_SUCCESS: 'GET_REGISTER_SUCCESS',\r\n    GET_REGISTER_FAILURE: 'GET_REGISTER_FAILURE',\r\n    \r\n    GET_USER_REQUEST: 'GET_USER_REQUEST',\r\n    GET_USER_SUCCESS: 'GET_USER_SUCCESS',\r\n    GET_USER_FAILURE: 'GET_USER_FAILURE',\r\n};\r\n","export const employeeConstants = {\r\n    ALL_REQUEST: 'ALL_REQUEST',\r\n    GET_SUCCESS: 'GET_SUCCESS',\r\n    GET_FAILURE: 'GET_FAILURE',\r\n    \r\n    ALL_SINGLE_REQUEST: 'ALL_SINGLE_REQUEST',\r\n    GET_SINLGE_SUCCESS: 'GET_SINLGE_SUCCESS',\r\n    GET_SINGLE_FAILURE: 'GET_SINGLE_FAILURE',\r\n\r\n    GET_DELETE_REQUEST: 'EMPLOYEE_DELETE_REQUEST',\r\n    GET_DELETE_SUCCESS: 'EMPLOYEE_DELETE_SUCCESS',\r\n    GET_DELETE_FAILURE: 'EMPLOYEE_DELETE_FAILURE',\r\n\r\n    GET_DETAILS_REQUEST: 'GET_DETAILS_REQUEST',\r\n    GET_DETAILS_SUCCESS: 'GET_DETAILS_SUCCESS',\r\n    GET_DETAILS_FAILURE: 'GET_DETAILS_FAILURE',\r\n\r\n    GET_CREATE_REQUEST: 'GET_CREATE_REQUEST',\r\n    GET_CREATE_SUCCESS: 'GET_CREATE_SUCCESS',\r\n    GET_CREATE_FAILURE: 'GET_CREATE_FAILURE',\r\n\r\n    GET_UPDATE_REQUEST: 'GET_UPDATE_REQUEST',\r\n    GET_UPDATE_SUCCESS: 'GET_UPDATE_SUCCESS',\r\n    GET_UPDATE_FAILURE: 'GET_UPDATE_FAILURE',\r\n};\r\n","export const meetupConstants = {\r\n    ALL_REQUEST: 'ALL_REQUEST',\r\n    GET_SUCCESS: 'GET_SUCCESS',\r\n    GET_FAILURE: 'GET_FAILURE',\r\n    \r\n    ALL_SINGLE_REQUEST: 'ALL_SINGLE_REQUEST',\r\n    GET_SINLGE_SUCCESS: 'GET_SINLGE_SUCCESS',\r\n    GET_SINGLE_FAILURE: 'GET_SINGLE_FAILURE',\r\n\r\n    JOIN_MEETUP_REQUEST: 'JOIN_MEETUP_REQUEST',\r\n    JOIN_MEETUP_SUCCESS: 'JOIN_MEETUP_SUCCESS',\r\n    JOIN_MEETUP_FAILURE: 'JOIN_MEETUP_FAILURE',\r\n\r\n\r\n    LEAVE_MEETUP_REQUEST: 'LEAVE_MEETUP_REQUEST',\r\n    LEAVE_MEETUP_SUCCESS: 'LEAVE_MEETUP_SUCCESS',\r\n    LEAVE_MEETUP_FAILURE: 'LEAVE_MEETUP_FAILURE',\r\n};\r\n","import {userConstants} from '../_constants';\r\n\r\nlet user = JSON.parse(localStorage.getItem('user'));\r\nconst initialState = user ? {\r\n    loggedIn: true,\r\n    user\r\n} : {};\r\n\r\nexport function authentication(state = initialState, action) {\r\n    switch (action.type) {\r\n        case userConstants.LOGIN_REQUEST:\r\n            return {loggingIn: true, user: action.user};\r\n        case userConstants.LOGIN_SUCCESS:\r\n            return {loggedIn: true, user: action.user};\r\n        case userConstants.LOGIN_FAILURE:\r\n            return {};\r\n        case userConstants.LOGOUT:\r\n            return {};\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {combineReducers} from 'redux';\r\n\r\nimport {authentication} from './authentication.reducer';\r\nimport {users, register, userDetails, loginDetails} from './users.reducer';\r\nimport {alert} from './alert.reducer';\r\nimport {employees, employeeDetails, employeeUpdate, employeeCreate} from './employee.reducer';\r\nimport {meetups, meetupDetails, joinMeetup, leaveMeetup} from './meetup.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    authentication,\r\n    users,\r\n    userDetails,\r\n    loginDetails,\r\n    register,\r\n    alert,\r\n    employees,\r\n    employeeDetails,\r\n    employeeUpdate,\r\n    employeeCreate,\r\n    meetups,\r\n    meetupDetails,\r\n    joinMeetup,\r\n    leaveMeetup\r\n});\r\n\r\nexport default rootReducer;\r\n","import {userConstants} from '../_constants';\r\n\r\nexport function users(state = {}, action) {\r\n    switch (action.type) {\r\n        case userConstants.GETALL_REQUEST:\r\n            return {loading: true};\r\n        case userConstants.GETALL_SUCCESS:\r\n            return {items: action.users};\r\n        case userConstants.GETALL_FAILURE:\r\n            return {error: action.error};\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport function register(state = {}, action) {\r\n    switch (action.type) {\r\n        case userConstants.GET_REGISTER_REQUEST:\r\n            return {loading: true};\r\n        case userConstants.GET_REGISTER_SUCCESS:\r\n            return {items: action.users};\r\n        case userConstants.GET_REGISTER_FAILURE:\r\n            return {error: action.error};\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport function userDetails(state = {}, action) {\r\n    switch (action.type) {\r\n        case userConstants.GET_USER_REQUEST:\r\n            return {loading: true};\r\n        case userConstants.GET_USER_SUCCESS:\r\n            return {items: action.user};\r\n        case userConstants.GET_USER_FAILURE:\r\n            return {error: action.error};\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport function loginDetails(state = {}, action) {\r\n    switch (action.type) {\r\n        case userConstants.USERS_LOGIN_REQUEST:\r\n            return {loading: true};\r\n        case userConstants.USERS_LOGIN_SUCCESS:\r\n            return {items: action.user};\r\n        case userConstants.USERS_LOGIN_FAILURE:\r\n            return {error: action.error};\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {alertConstants} from '../_constants';\r\n\r\nexport function alert(state = {}, action) {\r\n    switch (action.type) {\r\n        case alertConstants.SUCCESS:\r\n            return {type: 'alert-success', message: action.message};\r\n        case alertConstants.ERROR:\r\n            return {type: 'alert-danger', message: action.message};\r\n        case alertConstants.CLEAR:\r\n            return {};\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {employeeConstants} from '../_constants';\r\n\r\nexport function employees(state = {}, action) {\r\n    switch (action.type) {\r\n        case employeeConstants.ALL_REQUEST:\r\n            return {loading: true};\r\n        case employeeConstants.GET_SUCCESS:\r\n            return {items: action.employees};\r\n        case employeeConstants.GET_FAILURE:\r\n            return {error: action.error};\r\n\r\n        case employeeConstants.GET_DELETE_REQUEST:\r\n            return {loading: true};\r\n        case employeeConstants.GET_DELETE_FAILURE:\r\n            return {error: action.error};\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport function employeeDetails(state = {}, action) {\r\n    switch (action.type) {\r\n        case employeeConstants.GET_DETAILS_REQUEST:\r\n            return {loading: true};\r\n        case employeeConstants.GET_DETAILS_SUCCESS:\r\n            return {items: action.employee};\r\n        case employeeConstants.GET_DETAILS_FAILURE:\r\n            return {error: action.error};\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport function employeeUpdate(state = {}, action) {\r\n    switch (action.type) {\r\n        case employeeConstants.GET_UPDATE_REQUEST:\r\n            return {loading: true};\r\n        case employeeConstants.GET_UPDATE_SUCCESS:\r\n            return {items: action.employee};\r\n        case employeeConstants.GET_UPDATE_FAILURE:\r\n            return {error: action.error};\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport function employeeCreate(state = {}, action) {\r\n    switch (action.type) {\r\n        case employeeConstants.GET_CREATE_REQUEST:\r\n            return {loading: true};\r\n        case employeeConstants.GET_CREATE_SUCCESS:\r\n            return {items: action.employee};\r\n        case employeeConstants.GET_CREATE_FAILURE:\r\n            return {error: action.error};\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {meetupConstants} from '../_constants';\r\n\r\nexport function meetups(state = {}, action) {\r\n    switch (action.type) {\r\n        case meetupConstants.ALL_REQUEST:\r\n            return {loading: true};\r\n        case meetupConstants.GET_SUCCESS:\r\n            return {items: action.meetups};\r\n        case meetupConstants.GET_FAILURE:\r\n            return {error: action.error};\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport function meetupDetails(state = {}, action) {\r\n    switch (action.type) {\r\n        case meetupConstants.ALL_SINGLE_REQUEST:\r\n            return {loading: true};\r\n        case meetupConstants.GET_SINLGE_SUCCESS:\r\n            return {items: action.meetup};\r\n        case meetupConstants.GET_SINGLE_FAILURE:\r\n            return {error: action.error};\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport function joinMeetup(state = {}, action) {\r\n    switch (action.type) {\r\n        case meetupConstants.JOIN_MEETUP_REQUEST:\r\n            return {loading: true};\r\n        case meetupConstants.JOIN_MEETUP_SUCCESS:\r\n            return {items: action.meetup};\r\n        case meetupConstants.JOIN_MEETUP_FAILURE:\r\n            return {error: action.error};\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport function leaveMeetup(state = {}, action) {\r\n    switch (action.type) {\r\n        case meetupConstants.LEAVE_MEETUP_REQUEST:\r\n            return {loading: true};\r\n        case meetupConstants.LEAVE_MEETUP_SUCCESS:\r\n            return {items: action.meetup};\r\n        case meetupConstants.LEAVE_MEETUP_FAILURE:\r\n            return {error: action.error};\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n// import { createLogger } from 'redux-logger';\r\nimport rootReducer from '../_reducers';\r\n\r\n// const loggerMiddleware = createLogger();\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n        thunkMiddleware\r\n        // loggerMiddleware\r\n    )\r\n);","export function authHeader() {\r\n    // return authorization header with jwt token\r\n    let user = JSON.parse(localStorage.getItem('user'));\r\n\r\n    if (user && user.token) {\r\n        return { 'Authorization': 'Bearer ' + user.token };\r\n    } else {\r\n        return {};\r\n    }\r\n}","import {alertConstants} from '../_constants';\r\n\r\nexport const alertActions = {\r\n    success,\r\n    error,\r\n    clear\r\n};\r\n\r\nfunction success(message) {\r\n    return {type: alertConstants.SUCCESS, message};\r\n}\r\n\r\nfunction error(message) {\r\n    return {type: alertConstants.ERROR, message};\r\n}\r\n\r\nfunction clear() {\r\n    return {type: alertConstants.CLEAR};\r\n}\r\n","export const baseUrl= 'https://crud-employee-1101.herokuapp.com/api/v1'","import {authHeader} from '../_helpers';\r\nimport {baseUrl} from '../config';\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    register,\r\n    getUserDetails\r\n};\r\n\r\n// let users = [{ id: 1, username: 'test', password: 'test', firstName: 'Test', lastName: 'User' }];\r\nfunction login(email, password) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(\r\n            {email, password}\r\n        )\r\n    };\r\n\r\n    return fetch(baseUrl + '/users/login', requestOptions).then(handleResponse).then(user => {\r\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        return user;\r\n    });\r\n}\r\n\r\n\r\nfunction register(payload) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(payload)\r\n    };\r\n    console.log(payload);\r\n    debugger;\r\n    return fetch(baseUrl + '/users/register', requestOptions).then(handleResponse).then(user => {\r\n        console.log(user);\r\n        return user;\r\n    });\r\n}\r\n\r\nfunction logout() {\r\n    // remove user from local storage to log user out\r\n    localStorage.removeItem('user');\r\n}\r\n\r\nfunction getUserDetails() {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: authHeader()\r\n    };\r\n    debugger;\r\n    return fetch(baseUrl + '/users/me', requestOptions).then(handleResponse).then(user => {\r\n        console.log(user);\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        return user;\r\n    });\r\n\r\n\r\n}\r\n\r\nfunction handleResponse(response) {\r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (! response.ok) {\r\n            if (response.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                logout();\r\n                // location.reload(true);\r\n            }\r\n\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        return data;\r\n    });\r\n}\r\n","\r\nimport {baseUrl} from '../config';\r\n\r\nexport const employeeservice = {\r\n\r\n    logout,\r\n    getAllEmployees,\r\n    getEmployeeDetails,\r\n    updateEmployee,\r\n    deleteEmployee,\r\n    createEmployee\r\n};\r\n\r\nfunction getAllEmployees(){\r\n    const requestOptions = {\r\n        method: 'get',\r\n    };\r\n    return fetch(baseUrl+'/employees', requestOptions)\r\n    .then(handleResponse)\r\n    .then(employees => {\r\n        return employees;\r\n    });\r\n}\r\n\r\nfunction getEmployeeDetails(id){\r\n    const requestOptions = {\r\n        method: 'get',\r\n    };\r\n    return fetch(baseUrl+'/employees/employeesDetails?id='+id, requestOptions)\r\n    .then(handleResponse)\r\n    .then(employee => {\r\n        return employee;\r\n    });\r\n}\r\n\r\nfunction createEmployee(payload) {\r\n    const requestOptions = {\r\n        method: 'post',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n    };\r\n    return fetch(baseUrl+'/employees/create', requestOptions)\r\n    // .then(handleResponse)\r\n    .then(employee => {\r\n        return employee;\r\n    });\r\n}\r\n\r\n\r\nfunction updateEmployee(payload,id) {\r\n    const requestOptions = {\r\n        method: 'post',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n    };\r\n    return fetch(baseUrl+'/employees/update?id='+id, requestOptions)\r\n    // .then(handleResponse)\r\n    .then(employee => {\r\n        return employee;\r\n    });\r\n}\r\n\r\n\r\nfunction deleteEmployee(id) {\r\n    const requestOptions = {\r\n        method: 'post',\r\n    };\r\n    return fetch(baseUrl+'/employees/delete?id='+id, requestOptions)\r\n    // .then(handleResponse)\r\n    .then(employee => {\r\n        return employee;\r\n        // getAllEmployees();\r\n    });\r\n}\r\n\r\nfunction logout() {\r\n    // remove user from local storage to log user out\r\n    localStorage.removeItem('user');\r\n}\r\n\r\nfunction handleResponse(response) {\r\n    console.log(response);\r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            if (response.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                logout();\r\n            }\r\n            const error = (data && data.message) || response.statusText || 'Error is processing the request';\r\n            return Promise.reject(error);\r\n        }\r\n        return data;\r\n    });\r\n}","\r\nimport { authHeader } from '../_helpers';\r\nimport {baseUrl} from '../config';\r\n\r\nexport const meetupService = {\r\n    getAllMeetups,\r\n    getMeetupDetails,\r\n    joinMeetup,\r\n    leaveMeetup\r\n};\r\n\r\nfunction getAllMeetups(){\r\n    const requestOptions = {\r\n        method: 'get',\r\n    };\r\n    \r\n    return fetch(baseUrl+'/meetups', requestOptions)\r\n    .then(handleResponse)\r\n    .then(meetups => {\r\n        console.log(meetups);\r\n        return meetups;\r\n    });\r\n}\r\n\r\nfunction getMeetupDetails(id){\r\n    debugger;\r\n    const requestOptions = {\r\n        method: 'get',\r\n    };\r\n    return fetch(baseUrl+'/meetups/'+id, requestOptions)\r\n    .then(handleResponse)\r\n    .then(meetup => {\r\n        return meetup;\r\n    });\r\n} \r\n\r\nfunction joinMeetup(id){\r\n    debugger;\r\n    const requestOptions = {\r\n        method: 'post',\r\n        headers: authHeader()\r\n\r\n    };\r\n    return fetch(baseUrl+'/meetups/'+id+'/join', requestOptions)\r\n    .then(handleResponse)\r\n    .then(meetup => {\r\n        return meetup;\r\n    });\r\n} \r\n\r\nfunction leaveMeetup(id){\r\n    debugger;\r\n    const requestOptions = {\r\n        method: 'post',\r\n        headers: authHeader()\r\n    };\r\n    return fetch(baseUrl+'/meetups/'+id+'/leave', requestOptions)\r\n    .then(handleResponse)\r\n    .then(meetup => {\r\n        return meetup;\r\n    });\r\n} \r\n\r\nfunction logout() {\r\n    // remove user from local storage to log user out\r\n    localStorage.removeItem('user');\r\n}\r\n\r\nfunction handleResponse(response) {\r\n    console.log(response);\r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            if (response.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                logout();\r\n            }\r\n            const error = (data && data.message) || response.statusText || 'Error is processing the request';\r\n            return Promise.reject(error);\r\n        }\r\n        return data;\r\n    });\r\n}","import {userConstants} from '../_constants';\r\nimport {userService} from '../_services';\r\nimport {history} from '../_helpers';\r\n\r\nexport const userActions = {\r\n    login,\r\n    logout,\r\n    register,\r\n    getAll,\r\n    getUserDetails\r\n};\r\n\r\nfunction login(username, password) {\r\n    return dispatch => {\r\n        dispatch(request({username}));\r\n\r\n        userService.login(username, password).then(user => {\r\n            debugger;\r\n            dispatch(success(user));\r\n            history.push('/MeetupsList');\r\n        }, error => {\r\n            debugger;\r\n            dispatch(failure(error));\r\n        });\r\n    };\r\n\r\n    function request(user) {\r\n        return {type: userConstants.USERS_LOGIN_REQUEST, user}\r\n    }\r\n    function success(user) {\r\n        return {type: userConstants.USERS_LOGIN_SUCCESS, user}\r\n    }\r\n    function failure(error) {\r\n        return {type: userConstants.USERS_LOGIN_FAILURE, error}\r\n    }\r\n}\r\n\r\nfunction register(payload) {\r\n    console.log('Inside register' + payload);\r\n    return dispatch => {\r\n        dispatch(request(request()));\r\n        userService.register(payload).then(user => {\r\n            dispatch(success(user));\r\n            history.push('/');\r\n        }, error => {\r\n            dispatch(failure(error));\r\n            // dispatch(alertActions.error(error));\r\n        });\r\n    };\r\n\r\n    function request(user) {\r\n        return {type: userConstants.GET_REGISTER_REQUEST, user}\r\n    }\r\n    function success(user) {\r\n        return {type: userConstants.GET_REGISTER_SUCCESS, user}\r\n    }\r\n    function failure(error) {\r\n        return {type: userConstants.GET_REGISTER_FAILURE, error}\r\n    }\r\n}\r\n\r\n\r\nfunction logout() {\r\n    userService.logout();\r\n    return {type: userConstants.LOGOUT};\r\n}\r\n\r\nfunction getAll() {\r\n    return dispatch => {\r\n        dispatch(request());\r\n        userService.getAll().then(users => dispatch(success(users)), error => dispatch(failure(error)));\r\n    };\r\n\r\n    function request() {\r\n        return {type: userConstants.GETALL_REQUEST}\r\n    }\r\n    function success(users) {\r\n        return {type: userConstants.GETALL_SUCCESS, users}\r\n    }\r\n    function failure(error) {\r\n        return {type: userConstants.GETALL_FAILURE, error}\r\n    }\r\n}\r\n\r\n\r\nfunction getUserDetails() {\r\n    return dispatch => {\r\n        dispatch(request());\r\n        userService.getUserDetails().then(users => dispatch(success(users)),);\r\n    };\r\n\r\n    function request() {\r\n        return {type: userConstants.GET_USER_REQUEST}\r\n    }\r\n    function success(users) {\r\n        return {type: userConstants.GET_USER_SUCCESS, users}\r\n    }\r\n    // function failure(error) { return { type: userConstants.GET_USER_FAILURE, error } }\r\n}\r\n","import {employeeConstants} from '../_constants';\r\nimport {employeeservice} from '../_services';\r\nimport {history} from '../_helpers';\r\n\r\nexport const employeeactions = {\r\n    getAllEmployees,\r\n    getEmployeeDetails,\r\n    updateEmployee,\r\n    createEmployee,\r\n    deleteEmployee\r\n\r\n};\r\n\r\nfunction getAllEmployees() {\r\n    return dispatch => {\r\n        dispatch(request());\r\n        employeeservice.getAllEmployees().then(employees => {\r\n            dispatch(success(employees));\r\n        }, error => {\r\n            dispatch(failure(error));\r\n            // dispatch(alertActions.error(error));\r\n        });\r\n    };\r\n\r\n    function request() {\r\n        return {type: employeeConstants.ALL_REQUEST}\r\n    }\r\n    function success(employees) {\r\n        return {type: employeeConstants.GET_SUCCESS, employees}\r\n    }\r\n    function failure(error) {\r\n        return {type: employeeConstants.GET_FAILURE, error}\r\n    }\r\n}\r\n\r\nfunction deleteEmployee(id) {\r\n    return dispatch => {\r\n        dispatch(request());\r\n        employeeservice.deleteEmployee(id).then(employee => {\r\n            if (employee.ok) {\r\n                dispatch(success(employee));\r\n                dispatch(employeeactions.getAllEmployees());\r\n            } else {\r\n                dispatch(failure('Error Processing request'));\r\n\r\n            }\r\n        }, error => {\r\n            dispatch(failure(error));\r\n            // dispatch(alertActions.error(error));\r\n        });\r\n    };\r\n\r\n    function request() {\r\n        return {type: employeeConstants.GET_DELETE_REQUEST}\r\n    }\r\n    function success(employee) {\r\n        return {type: employeeConstants.GET_DELETE_SUCCESS, employee}\r\n    }\r\n    function failure(error) {\r\n        return {type: employeeConstants.GET_DELETE_FAILURE, error}\r\n    }\r\n}\r\n\r\nfunction createEmployee(payload) {\r\n\r\n    return dispatch => {\r\n        dispatch(request());\r\n        employeeservice.createEmployee(payload).then(employee => {\r\n            dispatch(success(employee));\r\n            history.push('/EmployeeList');\r\n        }, error => {\r\n            dispatch(failure(error));\r\n            // dispatch(alertActions.error(error));\r\n        });\r\n    };\r\n    function request() {\r\n        return {type: employeeConstants.GET_CREATE_REQUEST}\r\n    }\r\n    function success(employee) {\r\n        return {type: employeeConstants.GET_CREATE_SUCCESS, employee}\r\n    }\r\n    function failure(error) {\r\n        return {type: employeeConstants.GET_CREATE_FAILURE, error}\r\n    }\r\n}\r\n\r\n\r\nfunction updateEmployee(payload, id) {\r\n\r\n    return dispatch => {\r\n        dispatch(request());\r\n        employeeservice.updateEmployee(payload, id).then(employee => {\r\n            dispatch(success(employee));\r\n            history.push('/EmployeeList');\r\n        }, error => {\r\n            dispatch(failure(error));\r\n            // dispatch(alertActions.error(error));\r\n        });\r\n    };\r\n    function request() {\r\n        return {type: employeeConstants.GET_UPDATE_REQUEST}\r\n    }\r\n    function success(employee) {\r\n        return {type: employeeConstants.GET_UPDATE_SUCCESS, employee}\r\n    }\r\n    function failure(error) {\r\n        return {type: employeeConstants.GET_UPDATE_FAILURE, error}\r\n    }\r\n}\r\n\r\n\r\nfunction getEmployeeDetails(id) {\r\n    return dispatch => {\r\n        dispatch(request());\r\n        employeeservice.getEmployeeDetails(id).then(employee => {\r\n            dispatch(success(employee));\r\n        });\r\n    };\r\n\r\n    function request() {\r\n        return {type: employeeConstants.GET_DETAILS_REQUEST}\r\n    }\r\n    function success(employee) {\r\n        return {type: employeeConstants.GET_DETAILS_SUCCESS, employee}\r\n    }\r\n    // function failure(error) { return { type: employeeConstants.GET_DETAILS_FAILURE, error } }\r\n}\r\n","import {meetupConstants} from '../_constants';\r\nimport {meetupService} from '../_services';\r\nimport {history} from '../_helpers';\r\nimport {userActions} from './user.actions';\r\n\r\nexport const meetupactions = {\r\n    getAllMeetups,\r\n    getMeetupDetails,\r\n    joinMeetup,\r\n    leaveMeetup\r\n\r\n};\r\n\r\nfunction getAllMeetups() {\r\n    return dispatch => {\r\n        dispatch(request());\r\n        meetupService.getAllMeetups().then(meetups => {\r\n            dispatch(success(meetups));\r\n        }, error => {\r\n            dispatch(failure(error));\r\n        });\r\n    };\r\n\r\n    function request() {\r\n        return {type: meetupConstants.ALL_REQUEST}\r\n    }\r\n    function success(meetups) {\r\n        return {type: meetupConstants.GET_SUCCESS, meetups}\r\n    }\r\n    function failure(error) {\r\n        return {type: meetupConstants.GET_FAILURE, error}\r\n    }\r\n}\r\n\r\nfunction getMeetupDetails(id) {\r\n    debugger;\r\n    return dispatch => {\r\n        dispatch(request());\r\n        meetupService.getMeetupDetails(id).then(meetup => {\r\n            dispatch(success(meetup));\r\n        });\r\n    };\r\n\r\n    function request() {\r\n        return {type: meetupConstants.ALL_SINGLE_REQUEST}\r\n    }\r\n    function success(meetup) {\r\n        return {type: meetupConstants.GET_SINLGE_SUCCESS, meetup}\r\n    }\r\n    // function failure(error) { return { type: meetupConstants.GET_SINGLE_FAILURE, error } }\r\n}\r\n\r\nfunction joinMeetup(meetupId) {\r\n    debugger;\r\n    return dispatch => {\r\n        dispatch(request());\r\n        meetupService.joinMeetup(meetupId).then(meetup => {\r\n            dispatch(success(meetup));\r\n            dispatch(userActions.getUserDetails());\r\n            history.push('/MeetupsList');\r\n        });\r\n    };\r\n\r\n    function request() {\r\n        return {type: meetupConstants.JOIN_MEETUP_REQUEST}\r\n    }\r\n    function success(meetup) {\r\n        return {type: meetupConstants.JOIN_MEETUP_SUCCESS, meetup}\r\n    }\r\n    // function failure(error) { return { type: meetupConstants.JOIN_MEETUP_FAILURE, error } }\r\n}\r\n\r\nfunction leaveMeetup(meetupId) {\r\n    debugger;\r\n    return dispatch => {\r\n        dispatch(request());\r\n        meetupService.leaveMeetup(meetupId).then(meetup => {\r\n            dispatch(success(meetup));\r\n            dispatch(userActions.getUserDetails());\r\n            history.push('/MeetupsList');\r\n        });\r\n    };\r\n\r\n    function request() {\r\n        return {type: meetupConstants.LEAVE_MEETUP_REQUEST}\r\n    }\r\n    function success(meetup) {\r\n        return {type: meetupConstants.LEAVE_MEETUP_SUCCESS, meetup}\r\n    }\r\n    // function failure(error) { return { type: meetupConstants.LEAVE_MEETUP_FAILURE, error } }\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={props => (\r\n        localStorage.getItem('user')\r\n            ? <Component {...props} />\r\n            : <Redirect to={{ pathname: '/', state: { from: props.location } }} />\r\n    )} />\r\n)","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {userActions} from '../_actions';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    Container,\r\n    Col,\r\n    Row\r\n} from 'reactstrap';\r\n\r\nclass LoginPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            submitted: false\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        const {submitted} = this.state;\r\n        if (submitted) {\r\n            this.setState({submitted: false});\r\n        }\r\n        const {name, value} = e.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        this.setState({submitted: true});\r\n        const {username, password} = this.state;\r\n        const {dispatch} = this.props;\r\n        if (username && password) {\r\n            dispatch(userActions.login(username, password));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        debugger;\r\n        const {username, password, submitted} = this.state;\r\n        const {loginDetails} = this.props;\r\n        return (\r\n            <div className=\"jumbotron\">\r\n                <div className=\"container\">\r\n                    {\r\n                    submitted && loginDetails && loginDetails.error && alert(loginDetails.error)\r\n                }\r\n                    <div className=\"col-sm-10 col-sm-offset-3\">\r\n                        <Container>\r\n                            <Row className=\"justify-content-center\">\r\n                                <Col md=\"12\" lg=\"15\" xl=\"15\">\r\n                                    <Card className=\"mx-8\">\r\n                                        <CardBody className=\"p-4\">\r\n                                            <h2>Login</h2>\r\n                                            <form name=\"form\"\r\n                                                onSubmit={\r\n                                                    this.handleSubmit\r\n                                            }>\r\n                                                <div className={\r\n                                                    'form-group' + (\r\n                                                    submitted && !username ? ' has-error' : ''\r\n                                                )\r\n                                                }>\r\n                                                    <label htmlFor=\"username\">Email</label>\r\n                                                    <input type=\"text\" className=\"form-control\" name=\"username\"\r\n                                                        value={username}\r\n                                                        onChange={\r\n                                                            this.handleChange\r\n                                                        }/> {\r\n                                                    submitted && !username && <div className=\"help-block\">Username is required</div>\r\n                                                } </div>\r\n                                                <div className={\r\n                                                    'form-group' + (\r\n                                                    submitted && !password ? ' has-error' : ''\r\n                                                )\r\n                                                }>\r\n                                                    <label htmlFor=\"password\">Password</label>\r\n                                                    <input type=\"password\" className=\"form-control\" name=\"password\"\r\n                                                        value={password}\r\n                                                        onChange={\r\n                                                            this.handleChange\r\n                                                        }/> {\r\n                                                    submitted && !password && <div className=\"help-block\">Password is required</div>\r\n                                                } </div>\r\n\r\n                                                <Row>\r\n                                                    <Col xs=\"12\" sm=\"6\">\r\n                                                        <div> {\r\n                                                            loginDetails && loginDetails.loading ? <button class=\"btn btn-primary\" type=\"button\" disabled>\r\n                                                                <span class=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                                                Loading...\r\n                                                            </button> : <Button className=\"btn btn-info mb-1\">\r\n                                                                <span>Login</span>\r\n                                                            </Button>\r\n                                                        } </div>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <p>\r\n                                                    Haven't Registered yet!!\r\n                                                    <Link to={'/Register'}>Please Register</Link>\r\n                                                </p>\r\n                                            </form>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const {loginDetails} = state;\r\n    return {loginDetails};\r\n}\r\n\r\nconst connectedLoginPage = connect(mapStateToProps)(LoginPage);\r\nexport {\r\n    connectedLoginPage as LoginPage\r\n};\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    Container,\r\n    Form,\r\n    Col,\r\n    Row\r\n} from 'reactstrap';\r\nimport {history} from '../_helpers';\r\nimport {userActions} from '../_actions';\r\n\r\n\r\nclass RegisterPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: '',\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            passwordConfirmation: '',\r\n            submitted: false\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleEmailValidation = this.handleEmailValidation.bind(this);\r\n        this.verifyEmail = this.verifyEmail.bind(this);\r\n    }\r\n\r\n    onCancel = (e) => {\r\n        history.push('/');\r\n    }\r\n\r\n\r\n    handleChange(e) {\r\n        const {name, value} = e.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    handleClick(e) {\r\n        debugger;\r\n        this.setState({submitted: true});\r\n        const {dispatch} = this.props;\r\n        const {\r\n            name,\r\n            username,\r\n            email,\r\n            password,\r\n            passwordConfirmation\r\n        } = this.state;\r\n        if (name && username && email && password && passwordConfirmation && (password.length >= 6) && (password === passwordConfirmation)) {\r\n            let payload = {\r\n                email: this.state.email,\r\n                name: this.state.name,\r\n                username: this.state.username,\r\n                password: this.state.password,\r\n                passwordConfirmation: this.state.passwordConfirmation\r\n            }\r\n            // dispatch(employeeactions.createEmployee(payload));\r\n            console.log(payload);\r\n            dispatch(userActions.register(payload));\r\n        }\r\n    }\r\n\r\n    verifyEmail(email) {\r\n        debugger;\r\n        const mailformat = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (email && mailformat.test(email)) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    handleEmailValidation(value) {\r\n        this.verifyEmail(value.email);\r\n    }\r\n\r\n\r\n    render() {\r\n        const {\r\n            name,\r\n            username,\r\n            email,\r\n            password,\r\n            passwordConfirmation,\r\n            submitted\r\n        } = this.state;\r\n        const {register} = this.props;\r\n        return (\r\n            <div className=\"jumbotron\">\r\n                <div className=\"container\">\r\n                    {\r\n                    submitted && register && register.error && alert(register.error)\r\n                }\r\n                    <div className=\"col-sm-15 col-sm-offset-2\">\r\n                        <Container>\r\n                            <Row className=\"justify-content-center\">\r\n                                <Col md=\"12\" lg=\"10\" xl=\"8\">\r\n                                    <Card className=\"mx-4\">\r\n                                        <CardBody className=\"p-4\">\r\n                                            <Form>\r\n                                                <h1>Register</h1>\r\n\r\n                                                <div className={\r\n                                                    'form-group' + (\r\n                                                    submitted && !name ? ' has-error' : ''\r\n                                                )\r\n                                                }>\r\n                                                    <label htmlFor=\"name\">Name</label>\r\n                                                    <input type=\"text\" className=\"form-control\" name=\"name\"\r\n                                                        value={name}\r\n                                                        onChange={\r\n                                                            this.handleChange\r\n                                                        }\r\n                                                        required/> {\r\n                                                    submitted && !name && <div className=\"help-block\">Name is required</div>\r\n                                                } </div>\r\n\r\n                                                <div className={\r\n                                                    'form-group' + (\r\n                                                    submitted && !username ? ' has-error' : ''\r\n                                                )\r\n                                                }>\r\n                                                    <label htmlFor=\"name\">User Name</label>\r\n                                                    <input type=\"text\" className=\"form-control\" name=\"username\"\r\n                                                        value={username}\r\n                                                        onChange={\r\n                                                            this.handleChange\r\n                                                        }/> {\r\n                                                    submitted && !username && <div className=\"help-block\">User Name is required</div>\r\n                                                }\r\n                                                    {\r\n                                                    submitted && username && username.length < 6 && <div className=\"help-block\">User Name is required</div>\r\n                                                } </div>\r\n\r\n                                                <div className={\r\n                                                    'form-group' + (\r\n                                                    submitted && !email ? ' has-error' : ''\r\n                                                )\r\n                                                }>\r\n                                                    <label htmlFor=\"email\">Email</label>\r\n                                                    <input type=\"text\" className=\"form-control\" name=\"email\"\r\n                                                        value={email}\r\n                                                        onChange={\r\n                                                            this.handleChange\r\n                                                        }/> {\r\n                                                    submitted && !email && <div className=\"help-block\">Email is required</div>\r\n                                                } </div>\r\n                                                <div className={\r\n                                                    'form-group' + (\r\n                                                    submitted && !password ? ' has-error' : ''\r\n                                                )\r\n                                                }>\r\n                                                    <label htmlFor=\"salary\">Password</label>\r\n                                                    <input type=\"password\" className=\"form-control\" name=\"password\"\r\n                                                        value={password}\r\n                                                        onChange={\r\n                                                            this.handleChange\r\n                                                        }/> {\r\n                                                    submitted && !password && <div className=\"help-block\">Password is required</div>\r\n                                                }\r\n                                                    {\r\n                                                    submitted && password && password.length < 6 && <span className=\"help-block\">Password is too short to be saved</span>\r\n                                                } </div>\r\n                                                <div className={\r\n                                                    'form-group' + (\r\n                                                    submitted && !passwordConfirmation ? ' has-error' : ''\r\n                                                )\r\n                                                }>\r\n                                                    <label htmlFor=\"salary\">Confirm Password</label>\r\n                                                    <input type=\"password\" className=\"form-control\" name=\"passwordConfirmation\"\r\n                                                        value={passwordConfirmation}\r\n                                                        onChange={\r\n                                                            this.handleChange\r\n                                                        }/> {\r\n                                                    submitted && !passwordConfirmation && <div className=\"help-block\">Confirm Password is required</div>\r\n                                                } </div>\r\n\r\n                                                <Row>\r\n                                                    <Col xs=\"12\" sm=\"6\">\r\n                                                        <div> {\r\n                                                            register && register.loading ? <button class=\"btn btn-info mb-1\" type=\"button\" disabled>\r\n                                                                <span class=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                                                Loading...\r\n                                                            </button> : <Button className=\"btn btn-info mb-1\" block\r\n                                                                onClick={\r\n                                                                    this.handleClick\r\n                                                            }>\r\n                                                                <span>Register</span>\r\n                                                            </Button>\r\n                                                        } </div>\r\n                                                    </Col>\r\n                                                    <Col xs=\"12\" sm=\"6\">\r\n                                                        <Button className=\"btn btn-info mb-1\" block\r\n                                                            onClick={\r\n                                                                this.onCancel\r\n                                                        }>\r\n                                                            <span>Cancel</span>\r\n                                                        </Button>\r\n                                                    </Col>\r\n                                                </Row>\r\n\r\n                                            </Form>\r\n                                            <div>\r\n                                                <small> * Password length must be greater than 6 letters</small><br/>\r\n                                                <small> * User Name must be greater than 8 letters</small>\r\n                                            </div>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const {register} = state;\r\n    return {register};\r\n}\r\n\r\nconst connectedLoginPage = connect(mapStateToProps)(RegisterPage);\r\nexport {\r\n    connectedLoginPage as RegisterPage\r\n};\r\n","import React, {useState, useRef} from 'react';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Overlay from 'react-bootstrap/Overlay';\r\n\r\nfunction UserData(props) {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [target, setTarget] = useState(null);\r\n    const ref = useRef(null);\r\n\r\n    const handleClick = (event) => {\r\n        setShow(!show);\r\n        setTarget(event.target);\r\n    };\r\n\r\n    return (\r\n        <div ref={ref}>\r\n            <Button onClick={handleClick}>\r\n                <strong>React Demo</strong>\r\n            </Button>\r\n            <Overlay show={show}\r\n                target={target}\r\n                placement=\"bottom\"\r\n                container={\r\n                    ref.current\r\n            }>\r\n                <Popover id=\"popover-contained\">\r\n                    <Popover.Title as=\"h3\">\r\n                        {\r\n                        props.user.name\r\n                    }</Popover.Title>\r\n                    <Popover.Content>\r\n                        <strong>{\r\n                            props.user.email\r\n                        }</strong>\r\n                    </Popover.Content>\r\n                </Popover>\r\n            </Overlay>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default UserData;\r\n","import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport UserData from '../Views/UserOverLay';\r\n\r\n\r\nclass Navigation extends React.Component {\r\n  \r\n  render() {    \r\n    debugger;\r\n    const userData = localStorage.getItem('user');\r\n    const user = userData && JSON.parse(userData);\r\n  \r\n    return (\r\n      <>\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n          {/* <Navbar.Brand>Welcome {name}</Navbar.Brand> */}\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"/MeetupsList\">Meetups</Nav.Link>\r\n            <Nav.Link href=\"/EmployeeList\">Employee List</Nav.Link>\r\n            <Nav.Link href=\"/\">Logout</Nav.Link>\r\n          </Nav>\r\n          <UserData user={user} />\r\n        </Navbar>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Navigation;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    Table,\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Row\r\n} from 'reactstrap';\r\nimport Navigation from '../App/Nav';\r\n\r\nimport {employeeactions} from '../_actions';\r\n\r\nclass EmployeeDetails extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.deleteEmployee = this.deleteEmployee.bind(this);\r\n        this.confirmDelete = this.confirmDelete.bind(this);\r\n        this.editEmployee = this.editEmployee.bind(this);\r\n        this.addEmployee = this.addEmployee.bind(this);\r\n        this.updateEmployee = this.updateEmployee.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(employeeactions.getAllEmployees());\r\n    }\r\n\r\n    deleteEmployee = (id) => {\r\n        this.props.dispatch(employeeactions.deleteEmployee(id));\r\n    }\r\n\r\n    addEmployee = () => {\r\n        this.props.history.push('/AddEmployee');\r\n    }\r\n\r\n    updateEmployee = (id) => {\r\n        console.log(id);\r\n        this.props.history.push({\r\n            pathname: '/update/' + id\r\n        });\r\n    }\r\n\r\n    editEmployee = (id) => {\r\n        window.confirm(\"Are you sure you wish to update this item?\") && this.updateEmployee(id);\r\n    }\r\n\r\n    confirmDelete = (_id) => {\r\n        window.confirm(\"Are you sure you wish to delete this item?\") && this.deleteEmployee(_id)\r\n    }\r\n\r\n\r\n    render() {\r\n        const {employees} = this.props;\r\n        debugger;\r\n        return (\r\n            <div className=\"animated fadeIn\">\r\n                <Navigation/> {\r\n                employees.loading && <div class=\"d-flex justify-content-center\">\r\n                    <br/>\r\n                    <br/>\r\n                    <div class=\"spinner-border\" role=\"status\">\r\n                        <span class=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>\r\n            }\r\n                {\r\n                employees.error && alert('Error in API call' + employees.error)\r\n            }\r\n                {\r\n                employees.items && <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <CardHeader>\r\n                                <i className=\"fa fa-align-justify\"></i>\r\n                                Employee List\r\n                            </CardHeader>\r\n                            <CardBody>\r\n                                <button className=\"btn btn-primary\"\r\n                                    onClick={\r\n                                        () => {\r\n                                            this.addEmployee()\r\n                                        }\r\n                                }>Add Employee</button>\r\n                                <br/>\r\n                                <br/>\r\n                                <Table hover bordered striped responsive size=\"sm\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Name</th>\r\n                                            <th>Email</th>\r\n                                            <th>Age</th>\r\n                                            <th>Salary</th>\r\n                                            <th>Actions</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody> {\r\n                                        employees.items.map((item, id) => {\r\n                                            return <tr key={id}>\r\n                                                <td>{\r\n                                                    item.name\r\n                                                }</td>\r\n                                                <td>{\r\n                                                    item.email\r\n                                                }</td>\r\n                                                <td>{\r\n                                                    item.age\r\n                                                }</td>\r\n                                                <td>{\r\n                                                    item.salary\r\n                                                }</td>\r\n                                                <td>\r\n                                                    <div>\r\n                                                        <button className=\"btn btn-primary\"\r\n                                                            onClick={\r\n                                                                () => {\r\n                                                                    this.editEmployee(item._id)\r\n                                                                }\r\n                                                        }>Edit</button>\r\n                                                        {' '}\r\n                                                        <button className=\"btn btn-danger\"\r\n                                                            onClick={\r\n                                                                () => {\r\n                                                                    this.confirmDelete(item._id)\r\n                                                                }\r\n                                                        }>Delete</button>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                    })\r\n                                    } </tbody>\r\n                                </Table>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            } </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const {employees} = state;\r\n    return {employees};\r\n}\r\n\r\nconst connectedEmployee = connect(mapStateToProps)(EmployeeDetails);\r\nexport {\r\n    connectedEmployee as EmployeeDetails\r\n};\r\n","import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    Container,\r\n    CardFooter,\r\n    Form,\r\n    Col,\r\n    Row\r\n} from 'reactstrap';\r\nimport {employeeactions} from '../_actions';\r\nimport {history} from '../_helpers';\r\nimport Navigation from '../App/Nav';\r\n\r\nclass AddEmployee extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            age: '',\r\n            salary: '',\r\n            submitted: false\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleNumberChange = this.handleNumberChange.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleEmailValidation = this.handleEmailValidation.bind(this);\r\n        this.verifyEmail = this.verifyEmail.bind(this);\r\n    }\r\n\r\n    onCancel = (e) => {\r\n        history.push('/EmployeeList');\r\n    }\r\n\r\n\r\n    handleChange(e) {\r\n        const {name, value} = e.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    handleNumberChange(e) {\r\n        const re = /^[0-9\\b]+$/;\r\n        const {name, value} = e.target;\r\n        if (re.test(value)) {\r\n            this.setState({[name]: value});\r\n        }\r\n    }\r\n\r\n    verifyEmail(email) {\r\n        debugger;\r\n        const mailformat = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (email && mailformat.test(email)) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    handleEmailValidation(value) {\r\n        this.verifyEmail(value.email);\r\n    }\r\n\r\n    handleClick(e) {\r\n        this.setState({submitted: true});\r\n        const {dispatch} = this.props;\r\n        const {name, email, age, salary} = this.state;\r\n        if (name && email && age && salary && age < 100 && this.verifyEmail(email)) {\r\n            let payload = {\r\n                name: this.state.name,\r\n                email: this.state.email,\r\n                salary: this.state.salary,\r\n                age: this.state.age\r\n            }\r\n            dispatch(employeeactions.createEmployee(payload));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            name,\r\n            email,\r\n            age,\r\n            salary,\r\n            submitted\r\n        } = this.state;\r\n        const {employeeCreate} = this.props\r\n        return (\r\n            <div className=\"app flex-row align-items-center\">\r\n                <Navigation/>\r\n                <Container>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Col md=\"12\" lg=\"10\" xl=\"8\">\r\n                            <Card className=\"mx-4\">\r\n                                <CardBody className=\"p-4\">\r\n                                    <Form>\r\n                                        <h1>Add Employee</h1>\r\n\r\n                                        <div className={\r\n                                            'form-group' + (\r\n                                            submitted && !name ? ' has-error' : ''\r\n                                        )\r\n                                        }>\r\n                                            <label htmlFor=\"name\">Name</label>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"name\"\r\n                                                value={name}\r\n                                                onChange={\r\n                                                    this.handleChange\r\n                                                }/> {\r\n                                            submitted && !name && <div className=\"help-block\">Name is required</div>\r\n                                        } </div>\r\n\r\n                                        <div className={\r\n                                            'form-group' + (\r\n                                            submitted && !email ? ' has-error' : ''\r\n                                        )\r\n                                        }>\r\n                                            <label htmlFor=\"email\">Email</label>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"email\"\r\n                                                value={email}\r\n                                                onChange={\r\n                                                    this.handleChange\r\n                                                }/> {\r\n                                            submitted && !email && <div className=\"help-block\">Email is required</div>\r\n                                        } </div>\r\n                                        <div className={\r\n                                            'form-group' + (\r\n                                            submitted && !salary ? ' has-error' : ''\r\n                                        )\r\n                                        }>\r\n                                            <label htmlFor=\"salary\">Salary</label>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"salary\"\r\n                                                value={salary}\r\n                                                onChange={\r\n                                                    this.handleNumberChange\r\n                                                }/> {\r\n                                            submitted && !salary && <div className=\"help-block\">Salary is required</div>\r\n                                        } </div>\r\n                                        <div className={\r\n                                            'form-group' + (\r\n                                            submitted && !age ? ' has-error' : ''\r\n                                        )\r\n                                        }>\r\n                                            <label htmlFor=\"age\">Age</label>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"age\"\r\n                                                value={age}\r\n                                                onChange={\r\n                                                    this.handleNumberChange\r\n                                                }/> {\r\n                                            submitted && !age && <div className=\"help-block\">Age is required</div>\r\n                                        }\r\n                                            {\r\n                                            submitted && (age > 100) && <div className=\"help-block\">Age cannot be greater than 100</div>\r\n                                        } </div>\r\n\r\n                                        <CardFooter className=\"p-4\">\r\n                                            <Row>\r\n                                                <Col xs=\"12\" sm=\"6\">\r\n                                                    <div> {\r\n                                                        employeeCreate && employeeCreate.loading ? <button class=\"btn btn-info mb-1\" type=\"button\" disabled>\r\n                                                            <span class=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                                            Updating...\r\n                                                        </button> : <Button className=\"btn btn-info mb-1\" block\r\n                                                            onClick={\r\n                                                                this.handleClick\r\n                                                        }>\r\n                                                            <span>Save</span>\r\n                                                        </Button>\r\n                                                    } </div>\r\n\r\n                                                </Col>\r\n                                                <Col xs=\"12\" sm=\"6\">\r\n                                                    <Button className=\"btn btn-info mb-1\" block\r\n                                                        onClick={\r\n                                                            this.onCancel\r\n                                                    }>\r\n                                                        <span>Cancel</span>\r\n                                                    </Button>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </CardFooter>\r\n                                    </Form>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const {employeeCreate} = state;\r\n    return {employeeCreate};\r\n}\r\n\r\nconst connectedEmployee = connect(mapStateToProps)(AddEmployee);\r\nexport {\r\n    connectedEmployee as AddEmployee\r\n};\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    Container,\r\n    CardFooter,\r\n    Form,\r\n    Col,\r\n    Row\r\n} from 'reactstrap';\r\nimport {employeeactions} from '../_actions';\r\nimport {history} from '../_helpers';\r\n\r\n\r\nclass UpdateEmployee extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            _id: '',\r\n            name: '',\r\n            email: '',\r\n            age: '',\r\n            salary: '',\r\n            submitted: false\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleNumberChange = this.handleNumberChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.match.params.id);\r\n        this.props.dispatch(employeeactions.getEmployeeDetails(this.props.match.params.id));\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log('did update');\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        console.log('props recieved', nextProps);\r\n        let data = nextProps.employeeDetails;\r\n        if (data && data.items) {\r\n            this.setState({\r\n                _id: data.items._id,\r\n                name: data.items.name,\r\n                email: data.items.email,\r\n                salary: data.items.salary,\r\n                age: data.items.age\r\n            });\r\n        }\r\n    }\r\n\r\n    onCancel = (e) => {\r\n        history.push('/EmployeeList');\r\n    }\r\n\r\n\r\n    handleChange(e) {\r\n        const {name, value} = e.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    handleNumberChange(e) {\r\n        const re = /^[0-9\\b]+$/;\r\n        const {name, value} = e.target;\r\n        if (re.test(value)) {\r\n            this.setState({[name]: value});\r\n        }\r\n    }\r\n\r\n    handleEmailValidation(value) {\r\n        debugger;\r\n        const mailformat = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (value && mailformat.test(value.email)) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    handleClick(e) {\r\n        this.setState({submitted: true});\r\n        const {dispatch} = this.props;\r\n        const {name, email, age, salary} = this.state;\r\n        if (name && email && age && salary) {\r\n            let payload = {\r\n                name: this.state.name,\r\n                email: this.state.email,\r\n                salary: this.state.salary,\r\n                age: this.state.age\r\n            }\r\n            dispatch(employeeactions.updateEmployee(payload, this.state._id));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {employeeDetails, employeeUpdate} = this.props;\r\n        const {\r\n            name,\r\n            email,\r\n            age,\r\n            salary,\r\n            submitted\r\n        } = this.state;\r\n        return (\r\n            <div className=\"app flex-row align-items-center\">\r\n                {\r\n                employeeDetails.loading && <div class=\"d-flex justify-content-center\">\r\n                    <br/>\r\n                    <br/>\r\n                    <div class=\"spinner-border\" role=\"status\">\r\n                        <span class=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>\r\n            }\r\n                {\r\n                employeeDetails.error && alert('Error in API call' + employeeDetails.error)\r\n            }\r\n                {\r\n                employeeDetails.items && <Container>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Col md=\"12\" lg=\"10\" xl=\"8\">\r\n                            <Card className=\"mx-4\">\r\n                                <CardBody className=\"p-4\">\r\n                                    <Form>\r\n                                        <h1>Update Employee</h1>\r\n\r\n                                        <div>\r\n\r\n                                            <div className={\r\n                                                'form-group' + (\r\n                                                submitted && !name ? ' has-error' : ''\r\n                                            )\r\n                                            }>\r\n                                                <label htmlFor=\"name\">Name</label>\r\n                                                <input type=\"text\" className=\"form-control\" name=\"name\"\r\n                                                    value={name}\r\n                                                    onChange={\r\n                                                        this.handleChange\r\n                                                    }/> {\r\n                                                submitted && !name && <div className=\"help-block\">Name is required</div>\r\n                                            } </div>\r\n                                            <div className={\r\n                                                'form-group' + (\r\n                                                submitted && !email ? ' has-error' : ''\r\n                                            )\r\n                                            }>\r\n                                                <label htmlFor=\"email\">Email</label>\r\n                                                <input type=\"text\" className=\"form-control\" name=\"email\"\r\n                                                    value={email}\r\n                                                    onChange={\r\n                                                        this.handleChange\r\n                                                    }/> {\r\n                                                submitted && !email && <div className=\"help-block\">Email is required</div>\r\n                                            } </div>\r\n                                            <div className={\r\n                                                'form-group' + (\r\n                                                submitted && !salary ? ' has-error' : ''\r\n                                            )\r\n                                            }>\r\n                                                <label htmlFor=\"salary\">Salary</label>\r\n                                                <input type=\"text\" className=\"form-control\" name=\"salary\"\r\n                                                    value={salary}\r\n                                                    onChange={\r\n                                                        this.handleChange\r\n                                                    }/> {\r\n                                                submitted && !salary && <div className=\"help-block\">Salary is required</div>\r\n                                            } </div>\r\n                                            <div className={\r\n                                                'form-group' + (\r\n                                                submitted && !age ? ' has-error' : ''\r\n                                            )\r\n                                            }>\r\n                                                <label htmlFor=\"age\">Age</label>\r\n                                                <input type=\"text\" className=\"form-control\" name=\"age\"\r\n                                                    value={age}\r\n                                                    onChange={\r\n                                                        this.handleNumberChange\r\n                                                    }/> {\r\n                                                submitted && !age && <div className=\"help-block\">Age is required</div>\r\n                                            } </div>\r\n                                        </div>\r\n\r\n                                        <CardFooter className=\"p-4\">\r\n                                            <Row>\r\n                                                <Col xs=\"12\" sm=\"6\">\r\n                                                    <div> {\r\n                                                        employeeUpdate && employeeUpdate.loading ? <button class=\"btn btn-info mb-1\" type=\"button\" disabled>\r\n                                                            <span class=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                                            Saving...\r\n                                                        </button> : <Button className=\"btn btn-info mb-1\" block\r\n                                                            onClick={\r\n                                                                this.handleClick\r\n                                                        }>\r\n                                                            <span>Update</span>\r\n                                                        </Button>\r\n                                                    } </div>\r\n\r\n                                                </Col>\r\n                                                <Col xs=\"12\" sm=\"6\">\r\n                                                    <Button className=\"btn btn-info mb-1\" block\r\n                                                        onClick={\r\n                                                            this.onCancel\r\n                                                    }>\r\n                                                        <span>Cancel</span>\r\n                                                    </Button>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </CardFooter>\r\n                                    </Form>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            } </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const {employeeDetails, employeeUpdate} = state;\r\n    return {employeeDetails, employeeUpdate};\r\n}\r\n\r\nconst connectedEmployee = connect(mapStateToProps)(UpdateEmployee);\r\nexport {\r\n    connectedEmployee as UpdateEmployee\r\n};\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport Navigation from '../App/Nav';\r\nimport {meetupactions} from '../_actions';\r\nimport {\r\n    Table,\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Row\r\n} from 'reactstrap';\r\n\r\n\r\nfunction MeetupDetails(props) {\r\n    const item = props.item\r\n    const itemLink = `/meetups/${\r\n        item._id\r\n    }`\r\n\r\n    return (\r\n        <Col xs=\"12\" sm=\"6\" md=\"4\">\r\n            <Card>\r\n                <CardHeader>\r\n                    Meetup:\r\n                    <Link to={itemLink}>\r\n                        {\r\n                        item.title\r\n                    }</Link>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    Name:\r\n                    <Link to={itemLink}>\r\n                        {\r\n                        item.description\r\n                    }</Link><br/>\r\n                    Started: {\r\n                    item.createdAt\r\n                }<br/>\r\n                    From: {\r\n                    item.timeFrom\r\n                }<br/>\r\n                    to: {\r\n                    item.timeTo\r\n                }<br/>\r\n                    Subscribers: {\r\n                    item.joinedPeopleCount\r\n                } </CardBody>\r\n            </Card>\r\n        </Col>\r\n    )\r\n}\r\n\r\n\r\nclass Meetups extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(meetupactions.getAllMeetups());\r\n    }\r\n\r\n    render() {\r\n        debugger;\r\n        const {meetups} = this.props;\r\n        return (\r\n            <div className=\"animated fadeIn\">\r\n                <Navigation/> {\r\n                meetups.loading && <div class=\"d-flex justify-content-center\">\r\n                    <br/>\r\n                    <br/>\r\n                    <div class=\"spinner-border\" role=\"status\">\r\n                        <span class=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>\r\n            }\r\n                {\r\n                meetups.error && alert('Error in API call' + meetups.error)\r\n            }\r\n                {\r\n                meetups.items && <div className=\"animated fadeIn\">\r\n                    <Row>\r\n                        <Col>\r\n                            <Card>\r\n                                <CardHeader>\r\n                                    <i className=\"fa fa-align-justify\"></i>\r\n                                    Meetups\r\n                                </CardHeader>\r\n                                <CardBody>\r\n                                    <Table responsive hover>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <Row> {\r\n                                                    meetups.items.map((item, index) => <MeetupDetails key={index}\r\n                                                        item={item}/>)\r\n                                                } </Row>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            } </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const {meetups} = state;\r\n    return {meetups};\r\n}\r\n\r\nconst meetups = connect(mapStateToProps)(Meetups);\r\nexport {\r\n    meetups as Meetups\r\n};\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Navigation from '../App/Nav';\r\nimport {meetupactions} from '../_actions';\r\nimport {\r\n    Container,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Row,\r\n    Button\r\n} from 'reactstrap';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\n\r\nclass MeetupDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this._isUserJoinedInMeetup = this._isUserJoinedInMeetup.bind(this);\r\n        this._isUserOwner = this._isUserOwner.bind(this);\r\n        this.handleJoinMeetup = this.handleJoinMeetup.bind(this);\r\n        this.handleLeaveMeetup = this.handleLeaveMeetup.bind(this);\r\n        this.showConfirmation = this.showConfirmation.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.props.match.params.id);\r\n        this.props.dispatch(meetupactions.getMeetupDetails(this.props.match.params.id));\r\n    }\r\n\r\n    render() {\r\n        const {meetupDetails} = this.props;\r\n        const meetupData = meetupDetails.items;\r\n        const user = localStorage.getItem('user');\r\n        return (\r\n            <div className=\"app flex-row align-items-center\">\r\n                <Navigation/> {\r\n                meetupDetails.loading && <div class=\"d-flex justify-content-center\">\r\n                    <br/>\r\n                    <br/>\r\n                    <div class=\"spinner-border\" role=\"status\">\r\n                        <span class=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>\r\n            }\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Card className=\"text-center\">\r\n                                <CardHeader>\r\n                                    <h1>\r\n                                        <i className=\"icon-info pr-1\"></i>\r\n                                        {\r\n                                        meetupData && meetupData.title\r\n                                    }</h1>\r\n                                    <strong> {\r\n                                        meetupData && meetupData.meetupCreator.name ? <i className=\"icon-info pr-1\">Meetup Owner: {\r\n                                            meetupData.meetupCreator.name\r\n                                        }</i> : <></>\r\n                                    } </strong><br/>\r\n\r\n                                </CardHeader>\r\n                                <CardBody> {\r\n                                    meetupData && <div>\r\n                                        <Row>\r\n                                            <Col lg={6}>\r\n                                                <Card className=\"text-center\">\r\n\r\n                                                    <CardBody>\r\n                                                        <img src={\r\n                                                                meetupData && meetupData.image\r\n                                                            }\r\n                                                            alt=''\r\n                                                            width='200px'\r\n                                                            height='200px'/><br/>\r\n                                                        Description :\r\n                                                        <strong>{\r\n                                                            meetupData && meetupData.description\r\n                                                        }</strong><br/>\r\n                                                        Short Info  : {\r\n                                                        meetupData && meetupData.shortInfo\r\n                                                    }\r\n                                                        <br/>\r\n                                                        <strong>Subscribers: {\r\n                                                            meetupData && meetupData.joinedPeopleCount\r\n                                                        }<br/>\r\n                                                        </strong>\r\n                                                        Meetup From: {\r\n                                                        meetupData && meetupData.timeFrom\r\n                                                    }<br/>\r\n                                                        Meetup To: {\r\n                                                        meetupData && meetupData.timeTo\r\n                                                    } </CardBody>\r\n                                                </Card>\r\n                                            </Col>\r\n                                            <Col lg={6}>\r\n                                                <Card className=\"text-center\">\r\n                                                    <CardBody>\r\n                                                        <MeetupCategory category={\r\n                                                            meetupData && meetupData.category\r\n                                                        }/>\r\n                                                        <MeetupUsers joinedPeople={\r\n                                                            meetupData && meetupData.joinedPeople\r\n                                                        }/>\r\n                                                    </CardBody>\r\n                                                </Card>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <br/>\r\n                                        <br/>\r\n                                        <span>{\r\n                                            this._isUserOwner(user, meetupData) ? <strong>Meetup Owner</strong> : this._isUserJoinedInMeetup(user, meetupData) ? <Button variant='primary'\r\n                                                onClick={\r\n                                                    () => {\r\n                                                        this.showConfirmation(2, meetupData._id)\r\n                                                    }\r\n                                            }>Leave Meetup</Button> : <Button variant='primary'\r\n                                                onClick={\r\n                                                    () => {\r\n                                                        this.showConfirmation(1, meetupData._id)\r\n                                                    }\r\n                                            }>Join Meetup</Button>\r\n                                        } </span>\r\n                                    </div>\r\n                                } </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    _isUserJoinedInMeetup(userData, meetupData) {\r\n        const user = JSON.parse(userData);\r\n        const joinedMeetup = user.joinedMeetups;\r\n        console.log('Meetup ' + meetup);\r\n        return(joinedMeetup && (joinedMeetup.indexOf(meetupData._id) > -1));\r\n    }\r\n\r\n    _isUserOwner(userData, meetupData) {\r\n        const user = JSON.parse(userData);\r\n        const creator = meetupData.meetupCreator;\r\n        console.log('Meetup ' + creator);\r\n        return(user && creator && user._id === creator._id);\r\n    }\r\n\r\n    handleJoinMeetup(id) {\r\n        this.props.dispatch(meetupactions.joinMeetup(id));\r\n    }\r\n\r\n    handleLeaveMeetup(id) {\r\n        this.props.dispatch(meetupactions.leaveMeetup(id));\r\n    }\r\n\r\n    showConfirmation(type, id) {\r\n        if (type === 1) {\r\n            window.confirm(\"Are you sure you subscribe to this meetup?\") && this.handleJoinMeetup(id);\r\n        } else if (type === 2) {\r\n            window.confirm(\"Are you sure you un subscribe to this meetup?\") && this.handleLeaveMeetup(id);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nfunction MeetupCategory(props) {\r\n    return (\r\n        <div className=\"app flex-row align-items-center\">\r\n            <strong>Category</strong>\r\n            <Card>\r\n                Name: {\r\n                props.category && props.category.name\r\n            }<br/>\r\n                Created at: {\r\n                props.category && props.category.createdAt\r\n            }<br/>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction MeetupUsers(props) {\r\n    debugger;\r\n    console.log(props.joinedPeople);\r\n    return (\r\n        <div className=\"app flex-row align-items-center\">\r\n            <strong>Subscribers</strong>\r\n            <Card> {\r\n                props.joinedPeople && props.joinedPeople.map((item, id) => {\r\n                    return (\r\n                        <Card key={id}>\r\n                            {\r\n                            item.name\r\n                        } </Card>\r\n                    )\r\n\r\n                })\r\n            } </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const {meetupDetails, joinMeetup, leaveMeetup} = state;\r\n    return {meetupDetails, joinMeetup, leaveMeetup};\r\n}\r\n\r\nconst meetup = connect(mapStateToProps)(MeetupDetails);\r\nexport {\r\n    meetup as MeetupDetails\r\n};\r\n","import React from 'react';\r\nimport { Router, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { history } from '../_helpers';\r\nimport { alertActions } from '../_actions';\r\nimport { PrivateRoute } from '../_components';\r\nimport { LoginPage, RegisterPage } from '../LoginPage';\r\nimport { EmployeeDetails,AddEmployee,UpdateEmployee } from '../Employees';\r\nimport { Meetups,MeetupDetails } from '../Meetups';\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { dispatch } = this.props;\r\n        history.listen((location, action) => {\r\n            // clear alert on location change\r\n            dispatch(alertActions.clear());\r\n        });\r\n    }\r\n\r\n    render() {\r\n        debugger;\r\n        return (\r\n            <div>\r\n                <ToastContainer />\r\n                <div >\r\n                    <div >\r\n                        <Router history={history}>\r\n                            <div>\r\n                                <PrivateRoute exact path=\"/EmployeeList\" component={EmployeeDetails} />\r\n                                <PrivateRoute exact path=\"/MeetupsList\" component={Meetups} />\r\n                                <PrivateRoute exact path=\"/AddEmployee\" component={AddEmployee} />\r\n                                <PrivateRoute exact path='/update/:id' component={UpdateEmployee}/>\r\n                                <PrivateRoute exact path='/meetups/:id' component={MeetupDetails}/>\r\n                                <Route exact path=\"/\" component={LoginPage} />\r\n                                <Route exact path=\"/Register\" component={RegisterPage} />\r\n                            </div>\r\n                        </Router>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { alert } = state;\r\n    return {\r\n        alert\r\n    };\r\n}\r\n\r\nconst connectedApp = connect(mapStateToProps)(App);\r\nexport { connectedApp as App }; ","import React from 'react';\r\nimport {render} from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\n\r\nimport {store} from './_helpers';\r\nimport {App} from './App';\r\n\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nrender (<Provider store={store}>\r\n    <App/>\r\n</Provider>, document.getElementById('root'));\r\n"],"sourceRoot":""}